State 0:
          bql ::= * phrases
      (1) phrases ::= *
          phrases ::= * phrases phrase_opt T_SEMI

                           bql accept
                       phrases shift  62
                     {default} reduce 1

State 1:
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt
          column_name ::= * L_NAME
          table_name ::= * L_NAME
    (195) expressions_opt ::= *
          expressions_opt ::= * expressions
          expressions ::= * expression
          expressions ::= * expressions T_COMMA expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= equality K_IN T_LROUND * query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= equality K_IN T_LROUND * expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                     K_PREDICT shift  267
                    K_SIMULATE shift  8
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                         query shift  407
                    table_name shift  451
                   column_name shift  646
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715
                       primary shift  673
                    expression shift  634
                   expressions shift  504
               expressions_opt shift  406
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681
                     {default} reduce 195

State 2:
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt
          column_name ::= * L_NAME
          table_name ::= * L_NAME
    (195) expressions_opt ::= *
          expressions_opt ::= * expressions
          expressions ::= * expression
          expressions ::= * expressions T_COMMA expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= equality K_NOT K_IN T_LROUND * query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= equality K_NOT K_IN T_LROUND * expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                     K_PREDICT shift  267
                    K_SIMULATE shift  8
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                         query shift  410
                    table_name shift  451
                   column_name shift  646
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715
                       primary shift  673
                    expression shift  634
                   expressions shift  504
               expressions_opt shift  409
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681
                     {default} reduce 195

State 3:
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= T_LROUND * expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= T_LROUND * query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                     K_PREDICT shift  267
                    K_SIMULATE shift  8
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                         query shift  446
                    table_name shift  451
                   column_name shift  646
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715
                       primary shift  673
                    expression shift  447
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 4:
          infer ::= K_INFER K_EXPLICIT * infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer_exp_columns ::= * infer_exp_column
          infer_exp_columns ::= * infer_exp_columns T_COMMA infer_exp_column
          infer_exp_column ::= * select_column
          infer_exp_column ::= * K_PREDICT column_name as conf_opt nsamples_opt
          select_column ::= * T_STAR
          select_column ::= * table_name T_DOT T_STAR
          select_column ::= * table_name T_DOT T_LROUND query T_RROUND
          select_column ::= * expression as
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                        T_STAR shift  652
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  249
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  454
                   column_name shift  646
             infer_exp_columns shift  356
                       primary shift  673
              infer_exp_column shift  623
                 select_column shift  626
                    expression shift  258
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 5:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
    (195) expressions_opt ::= *
          expressions_opt ::= * expressions
          expressions ::= * expression
          expressions ::= * expressions T_COMMA expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= L_NAME T_LROUND * expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= L_NAME T_LROUND * K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= L_NAME T_LROUND * T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                        T_STAR shift  403
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                    K_DISTINCT shift  11
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  634
                   expressions shift  504
               expressions_opt shift  405
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681
                     {default} reduce 195

State 6:
          command ::= K_REGRESS column_name K_GIVEN T_LROUND * select_columns T_RROUND nsamples_opt K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          select_columns ::= * select_column
          select_columns ::= * select_columns T_COMMA select_column
          select_column ::= * T_STAR
          select_column ::= * table_name T_DOT T_STAR
          select_column ::= * table_name T_DOT T_LROUND query T_RROUND
          select_column ::= * expression as
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                        T_STAR shift  652
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  454
                   column_name shift  646
                select_columns shift  340
                       primary shift  673
                 select_column shift  637
                    expression shift  258
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 7:
          infer_exp_columns ::= infer_exp_columns T_COMMA * infer_exp_column
          infer_exp_column ::= * select_column
          infer_exp_column ::= * K_PREDICT column_name as conf_opt nsamples_opt
          select_column ::= * T_STAR
          select_column ::= * table_name T_DOT T_STAR
          select_column ::= * table_name T_DOT T_LROUND query T_RROUND
          select_column ::= * expression as
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                        T_STAR shift  652
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  249
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  454
                   column_name shift  646
                       primary shift  673
              infer_exp_column shift  627
                 select_column shift  626
                    expression shift  258
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 8:
          simulate ::= K_SIMULATE * select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= K_SIMULATE * select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= K_SIMULATE * select_columns K_FROM K_MODELS K_OF population_name modeledby_opt
          select_columns ::= * select_column
          select_columns ::= * select_columns T_COMMA select_column
          select_column ::= * T_STAR
          select_column ::= * table_name T_DOT T_STAR
          select_column ::= * table_name T_DOT T_LROUND query T_RROUND
          select_column ::= * expression as
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                        T_STAR shift  652
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  454
                   column_name shift  646
                select_columns shift  357
                       primary shift  673
                 select_column shift  637
                    expression shift  258
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 9:
          estimate ::= K_ESTIMATE select_quant * select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estby ::= K_ESTIMATE select_quant * select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          select_columns ::= * select_column
          select_columns ::= * select_columns T_COMMA select_column
          select_column ::= * T_STAR
          select_column ::= * table_name T_DOT T_STAR
          select_column ::= * table_name T_DOT T_LROUND query T_RROUND
          select_column ::= * expression as
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                        T_STAR shift  652
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  454
                   column_name shift  646
                select_columns shift  146
                       primary shift  673
                 select_column shift  637
                    expression shift  258
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 10:
          select ::= K_SELECT select_quant * select_columns from_sel_opt where group_by order_by limit_opt
          select_columns ::= * select_column
          select_columns ::= * select_columns T_COMMA select_column
          select_column ::= * T_STAR
          select_column ::= * table_name T_DOT T_STAR
          select_column ::= * table_name T_DOT T_LROUND query T_RROUND
          select_column ::= * expression as
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                        T_STAR shift  652
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  454
                   column_name shift  646
                select_columns shift  182
                       primary shift  673
                 select_column shift  637
                    expression shift  258
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 11:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
    (195) expressions_opt ::= *
          expressions_opt ::= * expressions
          expressions ::= * expression
          expressions ::= * expressions T_COMMA expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= L_NAME T_LROUND K_DISTINCT * expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  634
                   expressions shift  504
               expressions_opt shift  404
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681
                     {default} reduce 195

State 12:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          order_by ::= K_ORDER K_BY * order_keys
          order_keys ::= * order_key
          order_keys ::= * order_keys T_COMMA order_key
          order_key ::= * expression order_sense
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  180
                    order_keys shift  495
                     order_key shift  602
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 13:
          select_columns ::= select_columns T_COMMA * select_column
          select_column ::= * T_STAR
          select_column ::= * table_name T_DOT T_STAR
          select_column ::= * table_name T_DOT T_LROUND query T_RROUND
          select_column ::= * expression as
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                        T_STAR shift  652
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  454
                   column_name shift  646
                       primary shift  673
                 select_column shift  653
                    expression shift  258
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 14:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          primary ::= K_CASE * case_key_opt case_whens_opt case_else_opt K_END
    (324) case_key_opt ::= *
          case_key_opt ::= * expression
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  638
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681
                  case_key_opt shift  295
                     {default} reduce 324

State 15:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          group_by ::= K_GROUP K_BY * expressions
          group_by ::= K_GROUP K_BY * expressions K_HAVING expression
          expressions ::= * expression
          expressions ::= * expressions T_COMMA expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  634
                   expressions shift  360
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 16:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          order_keys ::= order_keys T_COMMA * order_key
          order_key ::= * expression order_sense
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  180
                     order_key shift  697
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 17:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          limit ::= K_LIMIT expression T_COMMA * expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  570
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 18:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          limit ::= K_LIMIT expression K_OFFSET * expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  571
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 19:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          predrel_of_opt ::= K_OF T_LROUND * expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  412
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 20:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          existing_rows ::= K_EXISTING K_ROWS T_LROUND * expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  414
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 21:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= K_PROBABILITY K_OF T_LROUND * expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  431
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 22:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= K_SIMILARITY K_TO T_LROUND * expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  441
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 23:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          mi_constraint ::= column_name T_EQ * expression
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  617
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 24:
          where ::= K_WHERE * expression
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  633
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 25:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          case_else_opt ::= K_ELSE * expression
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  639
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 26:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          case_whens_opt ::= case_whens_opt K_WHEN expression K_THEN * expression
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  644
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 27:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          case_whens_opt ::= case_whens_opt K_WHEN * expression K_THEN expression
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  449
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 28:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= K_CAST T_LROUND * expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  467
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 29:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          group_by ::= K_GROUP K_BY expressions K_HAVING * expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  677
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 30:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND * expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  479
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 31:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= K_SIMILARITY K_OF T_LROUND * expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  482
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 32:
          constraint ::= column_name T_EQ * expression
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  689
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 33:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          expressions ::= expressions T_COMMA * expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  712
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 34:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          limit ::= K_LIMIT * expression
          limit ::= K_LIMIT * expression K_OFFSET expression
          limit ::= K_LIMIT * expression T_COMMA expression
          expression ::= * boolean_or
          boolean_or ::= * boolean_or K_OR boolean_and
          boolean_or ::= * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                    expression shift  348
                    boolean_or shift  503
                   boolean_and shift  494
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 35:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          boolean_or ::= boolean_or K_OR * boolean_and
          boolean_and ::= * boolean_and K_AND boolean_not
          boolean_and ::= * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                   boolean_and shift  502
                   boolean_not shift  693
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 36:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= K_NOT * boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                   boolean_not shift  710
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 37:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          boolean_and ::= boolean_and K_AND * boolean_not
          boolean_not ::= * K_NOT boolean_not
          boolean_not ::= * equality
          equality ::= * equality K_IS ordering
          equality ::= * equality K_IS K_NOT ordering
          equality ::= * equality K_LIKE ordering
          equality ::= * equality K_NOT K_LIKE ordering
          equality ::= * equality K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= * equality K_GLOB ordering
          equality ::= * equality K_NOT K_GLOB ordering
          equality ::= * equality K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= * equality K_REGEXP ordering
          equality ::= * equality K_NOT K_REGEXP ordering
          equality ::= * equality K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= * equality K_MATCH ordering
          equality ::= * equality K_NOT K_MATCH ordering
          equality ::= * equality K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= * equality K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= * equality K_IN T_LROUND query T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND query T_RROUND
          equality ::= * equality K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= * equality K_ISNULL
          equality ::= * equality K_NOTNULL
          equality ::= * equality T_NEQ ordering
          equality ::= * equality T_EQ ordering
          equality ::= * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  36
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                   boolean_not shift  711
                      equality shift  296
                      ordering shift  326
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 38:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_IS * ordering
          equality ::= equality K_IS * K_NOT ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                         K_NOT shift  61
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  328
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 39:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality T_EQ * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  309
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 40:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality T_NEQ * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  310
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 41:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_BETWEEN ordering K_AND * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  311
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 42:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_BETWEEN * ordering K_AND ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  299
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 43:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_MATCH ordering K_ESCAPE * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  312
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 44:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_MATCH * ordering
          equality ::= equality K_MATCH * ordering K_ESCAPE ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  300
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 45:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_REGEXP ordering K_ESCAPE * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  313
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 46:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_REGEXP * ordering
          equality ::= equality K_REGEXP * ordering K_ESCAPE ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  301
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 47:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_GLOB ordering K_ESCAPE * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  314
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 48:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_GLOB * ordering
          equality ::= equality K_GLOB * ordering K_ESCAPE ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  302
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 49:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_BETWEEN ordering K_AND * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  315
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 50:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_BETWEEN * ordering K_AND ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  303
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 51:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_MATCH ordering K_ESCAPE * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  316
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 52:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_MATCH * ordering
          equality ::= equality K_NOT K_MATCH * ordering K_ESCAPE ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  304
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 53:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_REGEXP ordering K_ESCAPE * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  317
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 54:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_REGEXP * ordering
          equality ::= equality K_NOT K_REGEXP * ordering K_ESCAPE ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  305
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 55:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_GLOB ordering K_ESCAPE * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  318
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 56:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_GLOB * ordering
          equality ::= equality K_NOT K_GLOB * ordering K_ESCAPE ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  306
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 57:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_LIKE ordering K_ESCAPE * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  319
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 58:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_NOT K_LIKE * ordering
          equality ::= equality K_NOT K_LIKE * ordering K_ESCAPE ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  307
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 59:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_LIKE ordering K_ESCAPE * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  320
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 60:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_LIKE * ordering
          equality ::= equality K_LIKE * ordering K_ESCAPE ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  308
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 61:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          equality ::= equality K_IS K_NOT * ordering
          ordering ::= * ordering T_LT bitwise
          ordering ::= * ordering T_LEQ bitwise
          ordering ::= * ordering T_GEQ bitwise
          ordering ::= * ordering T_GT bitwise
          ordering ::= * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      ordering shift  321
                       bitwise shift  324
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 62:
      (0) bql ::= phrases *
          phrases ::= phrases * phrase_opt T_SEMI
      (3) phrase_opt ::= *
          phrase_opt ::= * phrase
          phrase ::= * command
          phrase ::= * query
          command ::= * K_BEGIN
          command ::= * K_ROLLBACK
          command ::= * K_COMMIT
          command ::= * K_CREATE temp_opt K_TABLE ifnotexists table_name K_AS query
          command ::= * K_CREATE temp_opt K_TABLE ifnotexists table_name K_FROM pathname
          command ::= * K_DROP K_TABLE ifexists table_name
          command ::= * K_ALTER K_TABLE table_name altertab_cmds
          command ::= * K_GUESS K_SCHEMA K_FOR table_name
          command ::= * K_CREATE K_POPULATION ifnotexists population_name K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
          command ::= * K_CREATE K_POPULATION ifnotexists K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
          command ::= * K_DROP K_POPULATION ifexists population_name
          command ::= * K_ALTER K_POPULATION population_name alterpop_cmds
          command ::= * K_CREATE K_GENERATOR ifnotexists generator_name K_FOR population_name backend_name_opt generator_schema_opt
          command ::= * K_CREATE K_GENERATOR ifnotexists K_FOR population_name backend_name_opt generator_schema_opt
          command ::= * K_DROP K_GENERATOR ifexists generator_name
          command ::= * K_ALTER K_GENERATOR generator_name anmodelset_matched_opt altergen_cmds
          command ::= * K_INITIALIZE L_INTEGER model_token ifnotexists K_FOR generator_name
          command ::= * K_ANALYZE generator_name anmodelset_opt anlimit anckpt_opt analysis_program_opt
          command ::= * K_DROP model_token modelset_opt K_FROM generator_name
          command ::= * K_REGRESS column_name K_GIVEN T_LROUND select_columns T_RROUND nsamples_opt K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt

                             $ reduce 0
                       K_BEGIN shift  726
                    K_ROLLBACK shift  725
                      K_COMMIT shift  724
                      K_CREATE shift  148
                        K_DROP shift  141
                       K_ALTER shift  329
                       K_GUESS shift  377
                  K_INITIALIZE shift  375
                     K_ANALYZE shift  194
                     K_REGRESS shift  187
                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                    K_SIMULATE shift  8
                    phrase_opt shift  506
                        phrase shift  729
                       command shift  728
                         query shift  727
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715
                     {default} reduce 3

State 63:
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt
          column_name ::= * L_NAME
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND * column_lists T_RROUND
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND * column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          column_lists ::= * column_list
          column_lists ::= * column_lists T_COMMA|K_AND column_list
          column_list ::= * T_STAR
          column_list ::= * column_name
          column_list ::= * T_LROUND query T_RROUND
          column_list ::= T_LROUND * query T_RROUND

                      T_LROUND shift  77
                        L_NAME shift  703
                        T_STAR shift  700
                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                    K_SIMULATE shift  8
                         query shift  425
                   column_name shift  699
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715
                  column_lists shift  334
                   column_list shift  597

State 64:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          ordering ::= ordering T_GT * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                       bitwise shift  322
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 65:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          ordering ::= ordering T_GEQ * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                       bitwise shift  323
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 66:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          ordering ::= ordering T_LEQ * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                       bitwise shift  325
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 67:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          ordering ::= ordering T_LT * bitwise
          bitwise ::= * bitwise T_BITAND additive
          bitwise ::= * bitwise T_BITIOR additive
          bitwise ::= * bitwise T_LSHIFT additive
          bitwise ::= * bitwise T_RSHIFT additive
          bitwise ::= * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                       bitwise shift  327
                      additive shift  361
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 68:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          bitwise ::= bitwise T_RSHIFT * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      additive shift  353
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 69:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          bitwise ::= bitwise T_LSHIFT * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      additive shift  362
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 70:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          bitwise ::= bitwise T_BITIOR * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      additive shift  364
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 71:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          bitwise ::= bitwise T_BITAND * additive
          additive ::= * additive T_PLUS multiplicative
          additive ::= * additive T_MINUS multiplicative
          additive ::= * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                      additive shift  367
                multiplicative shift  335
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 72:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          additive ::= additive T_MINUS * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                multiplicative shift  336
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 73:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          additive ::= additive T_PLUS * multiplicative
          multiplicative ::= * multiplicative T_STAR concatenative
          multiplicative ::= * multiplicative T_SLASH concatenative
          multiplicative ::= * multiplicative T_PERCENT concatenative
          multiplicative ::= * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                multiplicative shift  338
                 concatenative shift  483
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 74:
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt
          select_table ::= T_LROUND * query T_RROUND as

                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                    K_SIMULATE shift  8
                         query shift  401
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715

State 75:
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt
          select_column ::= table_name T_DOT T_LROUND * query T_RROUND

                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                    K_SIMULATE shift  8
                         query shift  453
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715

State 76:
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt
          primary ::= K_EXISTS T_LROUND * query T_RROUND

                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                    K_SIMULATE shift  8
                         query shift  448
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715

State 77:
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt
          column_list ::= T_LROUND * query T_RROUND

                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                    K_SIMULATE shift  8
                         query shift  425
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715

State 78:
          command ::= K_CREATE temp_opt K_TABLE ifnotexists table_name K_AS * query
          query ::= * select
          query ::= * estimate
          query ::= * estby
          query ::= * estcol
          query ::= * estpairrow
          query ::= * estpaircol
          query ::= * infer
          query ::= * simulate
          select ::= * K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt
          estimate ::= * K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= * K_ESTIMATE K_COLUMNS error T_SEMI
          estpairrow ::= * K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= * K_ESTIMATE K_PAIRWISE error T_SEMI
          estby ::= * K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          infer ::= * K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= * K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= * K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= * K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt

                      K_SELECT shift  183
                    K_ESTIMATE shift  147
                       K_INFER shift  98
                    K_SIMULATE shift  8
                         query shift  723
                        select shift  722
                      estimate shift  721
                         estby shift  720
                        estcol shift  719
                    estpairrow shift  718
                    estpaircol shift  717
                         infer shift  716
                      simulate shift  715

State 79:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          multiplicative ::= multiplicative T_PERCENT * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                 concatenative shift  485
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 80:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          multiplicative ::= multiplicative T_SLASH * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                 concatenative shift  493
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 81:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          multiplicative ::= multiplicative T_STAR * concatenative
          concatenative ::= * concatenative T_CONCAT collating
          concatenative ::= * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                 concatenative shift  501
                     collating shift  492
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 82:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          concatenative ::= concatenative T_CONCAT * collating
          collating ::= * collating K_COLLATE L_NAME|L_STRING
          collating ::= * unary
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                     collating shift  500
                         unary shift  708
                         bqlfn shift  704
                       literal shift  681

State 83:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF K_VALUE * unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF K_VALUE * primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  435
                         unary shift  605
                         bqlfn shift  704
                       literal shift  681

State 84:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name T_EQ * unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name T_EQ * primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  489
                         unary shift  692
                         bqlfn shift  704
                       literal shift  681

State 85:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= T_PLUS * unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                         unary shift  705
                         bqlfn shift  704
                       literal shift  681

State 86:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          unary ::= * T_BITNOT unary
          unary ::= * T_MINUS unary
          unary ::= T_MINUS * unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                         unary shift  706
                         bqlfn shift  704
                       literal shift  681

State 87:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          unary ::= * T_BITNOT unary
          unary ::= T_BITNOT * unary
          unary ::= * T_MINUS unary
          unary ::= * T_PLUS unary
          unary ::= * bqlfn
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE unary
          bqlfn ::= * K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= * K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= * K_SIMILARITY wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= * K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
          bqlfn ::= * K_DEPENDENCE K_PROBABILITY ofwith
          bqlfn ::= * K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt
          bqlfn ::= * K_PROBABILITY K_OF T_LROUND expression T_RROUND
          bqlfn ::= * K_CORRELATION ofwith
          bqlfn ::= * K_CORRELATION K_PVALUE ofwith
          bqlfn ::= * K_PREDICT column_name withconf nsamples_opt
          bqlfn ::= * primary
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                       T_MINUS shift  86
                     K_PREDICT shift  267
                        T_PLUS shift  85
                      T_BITNOT shift  87
                  K_PREDICTIVE shift  365
                 K_PROBABILITY shift  363
                  K_SIMILARITY shift  158
                  K_DEPENDENCE shift  475
                      K_MUTUAL shift  473
                 K_CORRELATION shift  157
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  673
                         unary shift  707
                         bqlfn shift  704
                       literal shift  681

State 88:
          withconf ::= K_WITH K_CONFIDENCE * primary
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  674
                       literal shift  681

State 89:
          column_name ::= * L_NAME
          table_name ::= * L_NAME
          nsamples_opt ::= K_USING * primary K_SAMPLES
          primary ::= * literal
          primary ::= * L_NUMPAR
          primary ::= * L_NAMPAR
          primary ::= * L_NAME T_LROUND expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= * L_NAME T_LROUND T_STAR T_RROUND
          primary ::= * T_LROUND expression T_RROUND
          primary ::= * T_LROUND query T_RROUND
          primary ::= * K_CAST T_LROUND expression K_AS type T_RROUND
          primary ::= * K_EXISTS T_LROUND query T_RROUND
          primary ::= * column_name
          primary ::= * table_name T_DOT column_name
          primary ::= * K_CASE case_key_opt case_whens_opt case_else_opt K_END
          literal ::= * K_NULL
          literal ::= * L_INTEGER
          literal ::= * L_FLOAT
          literal ::= * L_STRING

                      L_STRING shift  640
                      T_LROUND shift  3
                        L_NAME shift  368
                     L_INTEGER shift  642
                      K_EXISTS shift  462
                      L_NUMPAR shift  680
                      L_NAMPAR shift  679
                        K_CAST shift  468
                        K_CASE shift  14
                        K_NULL shift  643
                       L_FLOAT shift  641
                    table_name shift  451
                   column_name shift  646
                       primary shift  472
                       literal shift  681

State 90:
          constraints ::= * constraint
          constraints ::= * constraints T_COMMA constraint
          constraint ::= * column_name T_EQ expression
    (136) constraints_opt ::= *
          constraints_opt ::= * constraints
          column_name ::= * L_NAME
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND * constraints_opt T_RROUND

                        L_NAME shift  703
                   column_name shift  486
                   constraints shift  487
                    constraint shift  691
               constraints_opt shift  433
                     {default} reduce 136

State 91:
          constraints ::= * constraint
          constraints ::= * constraints T_COMMA constraint
          constraint ::= * column_name T_EQ expression
    (136) constraints_opt ::= *
          constraints_opt ::= * constraints
          column_name ::= * L_NAME
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND * constraints_opt T_RROUND

                        L_NAME shift  703
                   column_name shift  486
                   constraints shift  487
                    constraint shift  691
               constraints_opt shift  436
                     {default} reduce 136

State 92:
          constraints ::= * constraint
          constraints ::= * constraints T_COMMA constraint
          constraint ::= * column_name T_EQ expression
    (136) constraints_opt ::= *
          constraints_opt ::= * constraints
          column_name ::= * L_NAME
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND * constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND * constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND

                        L_NAME shift  703
                   column_name shift  486
                   constraints shift  487
                    constraint shift  691
               constraints_opt shift  439
                     {default} reduce 136

State 93:
          constraints ::= * constraint
          constraints ::= * constraints T_COMMA constraint
          constraint ::= * column_name T_EQ expression
    (136) constraints_opt ::= *
          constraints_opt ::= * constraints
          column_name ::= * L_NAME
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND * constraints_opt T_RROUND

                        L_NAME shift  703
                   column_name shift  486
                   constraints shift  487
                    constraint shift  691
               constraints_opt shift  440
                     {default} reduce 136

State 94:
          command ::= K_CREATE K_POPULATION ifnotexists K_FOR table_name with_schema_opt T_LROUND|T_LCURLY * pop_schema T_RROUND|T_RCURLY
          pop_schema ::= * pop_clause
          pop_schema ::= * pop_schema T_SEMI pop_clause
     (35) pop_clause ::= *
          pop_clause ::= * column_name stattype
          pop_clause ::= * K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO stattype
          pop_clause ::= * K_IGNORE pop_columns
          pop_clause ::= * K_GUESS stattypes_of_opt pop_columns_guess
          column_name ::= * L_NAME

                       K_GUESS shift  166
                         K_SET shift  346
                      K_IGNORE shift  129
                        L_NAME shift  703
                   column_name shift  226
                    pop_schema shift  331
                    pop_clause shift  551
                     {default} reduce 35

State 95:
          command ::= K_CREATE K_POPULATION ifnotexists population_name K_FOR table_name with_schema_opt T_LROUND|T_LCURLY * pop_schema T_RROUND|T_RCURLY
          pop_schema ::= * pop_clause
          pop_schema ::= * pop_schema T_SEMI pop_clause
     (35) pop_clause ::= *
          pop_clause ::= * column_name stattype
          pop_clause ::= * K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO stattype
          pop_clause ::= * K_IGNORE pop_columns
          pop_clause ::= * K_GUESS stattypes_of_opt pop_columns_guess
          column_name ::= * L_NAME

                       K_GUESS shift  166
                         K_SET shift  346
                      K_IGNORE shift  129
                        L_NAME shift  703
                   column_name shift  226
                    pop_schema shift  332
                    pop_clause shift  551
                     {default} reduce 35

State 96:
          column_name ::= * L_NAME
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND * column_lists T_RROUND
          column_lists ::= * column_list
          column_lists ::= * column_lists T_COMMA|K_AND column_list
          column_list ::= * T_STAR
          column_list ::= * column_name
          column_list ::= * T_LROUND query T_RROUND

                      T_LROUND shift  77
                        L_NAME shift  703
                        T_STAR shift  700
                   column_name shift  699
                  column_lists shift  333
                   column_list shift  597

State 97:
          for ::= K_FOR * column_lists
          column_name ::= * L_NAME
          column_lists ::= * column_list
          column_lists ::= * column_lists T_COMMA|K_AND column_list
          column_list ::= * T_STAR
          column_list ::= * column_name
          column_list ::= * T_LROUND query T_RROUND

                      T_LROUND shift  77
                        L_NAME shift  703
                        T_STAR shift  700
                   column_name shift  699
                  column_lists shift  352
                   column_list shift  597

State 98:
          infer ::= K_INFER * infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer ::= K_INFER * K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer_auto_columns ::= * infer_auto_column
          infer_auto_columns ::= * infer_auto_columns T_COMMA infer_auto_column
          infer_auto_column ::= * T_STAR
          infer_auto_column ::= * column_name as
          column_name ::= * L_NAME

                        L_NAME shift  703
                        T_STAR shift  631
                    K_EXPLICIT shift  4
                   column_name shift  255
            infer_auto_columns shift  122
             infer_auto_column shift  622

State 99:
          column_name ::= * L_NAME
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND * column_lists T_RROUND
          column_lists ::= * column_list
          column_lists ::= * column_lists T_COMMA|K_AND column_list
          column_list ::= * T_STAR
          column_list ::= * column_name
          column_list ::= * T_LROUND query T_RROUND

                      T_LROUND shift  77
                        L_NAME shift  703
                        T_STAR shift  700
                   column_name shift  699
                  column_lists shift  337
                   column_list shift  597

State 100:
          pop_clause ::= K_GUESS stattypes_of_opt * pop_columns_guess
          pop_columns_guess ::= * T_LROUND T_STAR T_RROUND
          pop_columns_guess ::= * pop_columns
          pop_columns ::= * column_name
          pop_columns ::= * pop_columns T_COMMA column_name
          column_name ::= * L_NAME

                      T_LROUND shift  395
                        L_NAME shift  703
                   column_name shift  555
                   pop_columns shift  393
             pop_columns_guess shift  554

State 101:
          from_sel_opt ::= K_FROM * select_tables
          select_tables ::= * select_table
          select_tables ::= * select_tables T_COMMA select_table
          select_table ::= * table_name as
          select_table ::= * T_LROUND query T_RROUND as
          table_name ::= * L_NAME

                      T_LROUND shift  74
                        L_NAME shift  566
                    table_name shift  232
                 select_tables shift  402
                  select_table shift  565

State 102:
          command ::= K_ALTER K_GENERATOR generator_name anmodelset_matched_opt * altergen_cmds
          altergen_cmds ::= * altergen_cmd
          altergen_cmds ::= * altergen_cmds T_COMMA altergen_cmd
          altergen_cmd ::= * K_RENAME K_TO generator_name
          altergen_cmd ::= * generator_schemum
     (63) generator_schemum ::= *
          generator_schemum ::= * generator_schemum gs_token

                      K_RENAME shift  379
                 altergen_cmds shift  380
                  altergen_cmd shift  521
             generator_schemum shift  144
                     {default} reduce 63

State 103:
          command ::= K_DROP model_token * modelset_opt K_FROM generator_name
     (80) modelset_opt ::= *
          modelset_opt ::= * modelset
          modelset ::= * modelrange
          modelset ::= * modelset T_COMMA modelrange
          modelrange ::= * L_INTEGER
          modelrange ::= * L_INTEGER T_MINUS L_INTEGER

                     L_INTEGER shift  458
                  modelset_opt shift  388
                      modelset shift  387
                    modelrange shift  662
                     {default} reduce 80

State 104:
          constraints ::= * constraint
          constraints ::= * constraints T_COMMA constraint
          constraint ::= * column_name T_EQ expression
          constraints_list ::= constraints_list T_COMMA T_LROUND * constraints T_RROUND
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  486
                   constraints shift  349
                    constraint shift  691

State 105:
          constraints ::= * constraint
          constraints ::= * constraints T_COMMA constraint
          constraint ::= * column_name T_EQ expression
          constraints_list ::= T_LROUND * constraints T_RROUND
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  486
                   constraints shift  351
                    constraint shift  691

State 106:
          column_name ::= * L_NAME
          mi_given_opt ::= K_GIVEN T_LROUND * mi_constraints T_RROUND
          mi_constraints ::= * mi_constraint
          mi_constraints ::= * mi_constraints T_COMMA mi_constraint
          mi_constraint ::= * column_name T_EQ expression
          mi_constraint ::= * column_name

                        L_NAME shift  703
                   column_name shift  444
                mi_constraints shift  355
                 mi_constraint shift  616

State 107:
          given_opt ::= K_GIVEN * constraints
          constraints ::= * constraint
          constraints ::= * constraints T_COMMA constraint
          constraint ::= * column_name T_EQ expression
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  486
                   constraints shift  460
                    constraint shift  691

State 108:
          pop_schema ::= pop_schema T_SEMI * pop_clause
     (35) pop_clause ::= *
          pop_clause ::= * column_name stattype
          pop_clause ::= * K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO stattype
          pop_clause ::= * K_IGNORE pop_columns
          pop_clause ::= * K_GUESS stattypes_of_opt pop_columns_guess
          column_name ::= * L_NAME

                       K_GUESS shift  166
                         K_SET shift  346
                      K_IGNORE shift  129
                        L_NAME shift  703
                   column_name shift  226
                    pop_clause shift  560
                     {default} reduce 35

State 109:
          command ::= K_ALTER K_POPULATION population_name * alterpop_cmds
          alterpop_cmds ::= * alterpop_cmd
          alterpop_cmds ::= * alterpop_cmds T_COMMA alterpop_cmd
          alterpop_cmd ::= * K_RENAME K_TO population_name
          alterpop_cmd ::= * K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO stattype
          alterpop_cmd ::= * K_ADD K_VARIABLE column_name stattype_opt

                      K_RENAME shift  383
                         K_SET shift  343
                         K_ADD shift  381
                 alterpop_cmds shift  384
                  alterpop_cmd shift  524

State 110:
          column_name ::= * L_NAME
          wrt ::= K_IN K_THE K_CONTEXT K_OF * column_list
          column_list ::= * T_STAR
          column_list ::= * column_name
          column_list ::= * T_LROUND query T_RROUND

                      T_LROUND shift  77
                        L_NAME shift  703
                        T_STAR shift  700
                   column_name shift  699
                   column_list shift  687

State 111:
          column_name ::= * L_NAME
          column_lists ::= column_lists T_COMMA|K_AND * column_list
          column_list ::= * T_STAR
          column_list ::= * column_name
          column_list ::= * T_LROUND query T_RROUND

                      T_LROUND shift  77
                        L_NAME shift  703
                        T_STAR shift  700
                   column_name shift  699
                   column_list shift  701

State 112:
          column_name ::= * L_NAME
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF * column_list
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF * T_LROUND column_lists T_RROUND
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF * column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF * T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          column_list ::= * T_STAR
          column_list ::= * column_name
          column_list ::= * T_LROUND query T_RROUND

                      T_LROUND shift  63
                        L_NAME shift  703
                        T_STAR shift  700
                   column_name shift  699
                   column_list shift  498

State 113:
          command ::= K_ANALYZE generator_name * anmodelset_opt anlimit anckpt_opt analysis_program_opt
     (76) anmodelset_opt ::= *
          anmodelset_opt ::= * model_token modelset
          model_token ::= * K_MODEL
          model_token ::= * K_MODELS

                      K_MODELS shift  658
                       K_MODEL shift  659
                   model_token shift  123
                anmodelset_opt shift  193
                     {default} reduce 76

State 114:
          command ::= K_ALTER K_GENERATOR generator_name * anmodelset_matched_opt altergen_cmds
     (78) anmodelset_matched_opt ::= *
          anmodelset_matched_opt ::= * model_token T_LROUND modelset T_RROUND
          model_token ::= * K_MODEL
          model_token ::= * K_MODELS

                      K_MODELS shift  658
                       K_MODEL shift  659
        anmodelset_matched_opt shift  102
                   model_token shift  378
                     {default} reduce 78

State 115:
          select_tables ::= select_tables T_COMMA * select_table
          select_table ::= * table_name as
          select_table ::= * T_LROUND query T_RROUND as
          table_name ::= * L_NAME

                      T_LROUND shift  74
                        L_NAME shift  566
                    table_name shift  232
                  select_table shift  569

State 116:
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO * existing_rows wrt
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO * hypothetical_rows wrt
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO * existing_rows K_AND hypothetical_rows wrt
          existing_rows ::= * K_EXISTING K_ROWS T_LROUND expression T_RROUND
          hypothetical_rows ::= * K_HYPOTHETICAL K_ROWS K_WITH K_VALUES T_LROUND constraints_list T_RROUND

                    K_EXISTING shift  416
                K_HYPOTHETICAL shift  421
                 existing_rows shift  168
             hypothetical_rows shift  233

State 117:
          column_name ::= * L_NAME
          ofwithmulti ::= K_OF mi_columns K_WITH * mi_columns
          mi_columns ::= * column_name
          mi_columns ::= * T_LROUND mi_column_list T_RROUND

                      T_LROUND shift  131
                        L_NAME shift  703
                   column_name shift  614
                    mi_columns shift  610

State 118:
          column_name ::= * L_NAME
          ofwithmulti ::= K_OF * mi_columns K_WITH mi_columns
          mi_columns ::= * column_name
          mi_columns ::= * T_LROUND mi_column_list T_RROUND

                      T_LROUND shift  131
                        L_NAME shift  703
                   column_name shift  614
                    mi_columns shift  443

State 119:
          column_name ::= * L_NAME
          ofwithmulti ::= K_WITH * mi_columns
          mi_columns ::= * column_name
          mi_columns ::= * T_LROUND mi_column_list T_RROUND

                      T_LROUND shift  131
                        L_NAME shift  703
                   column_name shift  614
                    mi_columns shift  615

State 120:
          withconf ::= * K_WITH K_CONFIDENCE primary
          infer_exp_column ::= K_PREDICT column_name * as conf_opt nsamples_opt
    (150) as ::= *
          as ::= * K_AS L_NAME
          bqlfn ::= K_PREDICT column_name * withconf nsamples_opt

                          K_AS shift  452
                        K_WITH shift  469
                            as shift  248
                      withconf shift  256
                     {default} reduce 150

State 121:
          infer_auto_columns ::= infer_auto_columns T_COMMA * infer_auto_column
          infer_auto_column ::= * T_STAR
          infer_auto_column ::= * column_name as
          column_name ::= * L_NAME

                        L_NAME shift  703
                        T_STAR shift  631
                   column_name shift  255
             infer_auto_column shift  632

State 122:
          infer ::= K_INFER infer_auto_columns * withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer_auto_columns ::= infer_auto_columns * T_COMMA infer_auto_column
    (120) withconf_opt ::= *
          withconf_opt ::= * withconf
          withconf ::= * K_WITH K_CONFIDENCE primary

                       T_COMMA shift  121
                        K_WITH shift  469
                  withconf_opt shift  273
                      withconf shift  629
                     {default} reduce 120

State 123:
          anmodelset_opt ::= model_token * modelset
          modelset ::= * modelrange
          modelset ::= * modelset T_COMMA modelrange
          modelrange ::= * L_INTEGER
          modelrange ::= * L_INTEGER T_MINUS L_INTEGER

                     L_INTEGER shift  458
                      modelset shift  372
                    modelrange shift  662

State 124:
          anmodelset_matched_opt ::= model_token T_LROUND * modelset T_RROUND
          modelset ::= * modelrange
          modelset ::= * modelset T_COMMA modelrange
          modelrange ::= * L_INTEGER
          modelrange ::= * L_INTEGER T_MINUS L_INTEGER

                     L_INTEGER shift  458
                      modelset shift  341
                    modelrange shift  662

State 125:
          altergen_cmds ::= altergen_cmds T_COMMA * altergen_cmd
          altergen_cmd ::= * K_RENAME K_TO generator_name
          altergen_cmd ::= * generator_schemum
     (63) generator_schemum ::= *
          generator_schemum ::= * generator_schemum gs_token

                      K_RENAME shift  379
                  altergen_cmd shift  523
             generator_schemum shift  144
                     {default} reduce 63

State 126:
          alterpop_cmd ::= K_ADD K_VARIABLE column_name * stattype_opt
     (40) stattype_opt ::= *
          stattype_opt ::= * stattype
          stattype ::= * L_NAME

                        L_NAME shift  558
                      stattype shift  525
                  stattype_opt shift  526
                     {default} reduce 40

State 127:
          alterpop_cmd ::= K_SET K_STATTYPES|K_STATTYPE K_OF * pop_columns K_TO stattype
          pop_columns ::= * column_name
          pop_columns ::= * pop_columns T_COMMA column_name
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  555
                   pop_columns shift  342

State 128:
          command ::= K_ALTER K_TABLE table_name * altertab_cmds
          altertab_cmds ::= * altertab_cmd
          altertab_cmds ::= * altertab_cmds T_COMMA altertab_cmd
          altertab_cmd ::= * K_RENAME K_TO table_name
          altertab_cmd ::= * K_RENAME k_column_opt column_name K_TO column_name

                      K_RENAME shift  162
                 altertab_cmds shift  386
                  altertab_cmd shift  530

State 129:
          pop_clause ::= K_IGNORE * pop_columns
          pop_columns ::= * column_name
          pop_columns ::= * pop_columns T_COMMA column_name
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  555
                   pop_columns shift  396

State 130:
          pop_clause ::= K_SET K_STATTYPES|K_STATTYPE K_OF * pop_columns K_TO stattype
          pop_columns ::= * column_name
          pop_columns ::= * pop_columns T_COMMA column_name
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  555
                   pop_columns shift  345

State 131:
          column_name ::= * L_NAME
          mi_columns ::= T_LROUND * mi_column_list T_RROUND
          mi_column_list ::= * column_name
          mi_column_list ::= * mi_column_list T_COMMA column_name

                        L_NAME shift  703
                   column_name shift  611
                mi_column_list shift  354

State 132:
          column_name ::= * L_NAME
          mi_constraints ::= mi_constraints T_COMMA * mi_constraint
          mi_constraint ::= * column_name T_EQ expression
          mi_constraint ::= * column_name

                        L_NAME shift  703
                   column_name shift  444
                 mi_constraint shift  618

State 133:
          infer ::= K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by * limit_opt
    (190) limit_opt ::= *
          limit_opt ::= * limit
          limit ::= * K_LIMIT expression
          limit ::= * K_LIMIT expression K_OFFSET expression
          limit ::= * K_LIMIT expression T_COMMA expression

                       K_LIMIT shift  34
                     limit_opt shift  628
                         limit shift  713
                     {default} reduce 190

State 134:
          modelset ::= * modelrange
          modelset ::= * modelset T_COMMA modelrange
          modelrange ::= * L_INTEGER
          modelrange ::= * L_INTEGER T_MINUS L_INTEGER
          usingmodel_opt ::= K_USING model_token * modelset

                     L_INTEGER shift  458
                      modelset shift  459
                    modelrange shift  662

State 135:
          primary ::= K_CAST T_LROUND expression K_AS * type T_RROUND
          type ::= * typename
          type ::= * typename T_LROUND typearg T_RROUND
          type ::= * typename T_LROUND typearg T_COMMA typearg T_RROUND
          typename ::= * L_NAME
          typename ::= * typename L_NAME

                        L_NAME shift  665
                          type shift  466
                      typename shift  359

State 136:
          infer ::= K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by * limit_opt
    (190) limit_opt ::= *
          limit_opt ::= * limit
          limit ::= * K_LIMIT expression
          limit ::= * K_LIMIT expression K_OFFSET expression
          limit ::= * K_LIMIT expression T_COMMA expression

                       K_LIMIT shift  34
                     limit_opt shift  678
                         limit shift  713
                     {default} reduce 190

State 137:
          constraints ::= constraints T_COMMA * constraint
          constraint ::= * column_name T_EQ expression
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  486
                    constraint shift  690

State 138:
          estimate ::= K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by * limit_opt
    (190) limit_opt ::= *
          limit_opt ::= * limit
          limit ::= * K_LIMIT expression
          limit ::= * K_LIMIT expression K_OFFSET expression
          limit ::= * K_LIMIT expression T_COMMA expression

                       K_LIMIT shift  34
                     limit_opt shift  698
                         limit shift  713
                     {default} reduce 190

State 139:
          select ::= K_SELECT select_quant select_columns from_sel_opt where group_by order_by * limit_opt
    (190) limit_opt ::= *
          limit_opt ::= * limit
          limit ::= * K_LIMIT expression
          limit ::= * K_LIMIT expression K_OFFSET expression
          limit ::= * K_LIMIT expression T_COMMA expression

                       K_LIMIT shift  34
                     limit_opt shift  714
                         limit shift  713
                     {default} reduce 190

State 140:
          generator_schema_opt ::= T_LROUND|T_LCURLY * generator_schema T_RROUND|T_RCURLY
          generator_schema ::= * generator_schemum
          generator_schema ::= * generator_schema T_COMMA generator_schemum
     (63) generator_schemum ::= *
          generator_schemum ::= * generator_schemum gs_token

             generator_schemum shift  142
              generator_schema shift  330
                     {default} reduce 63

State 141:
          command ::= K_DROP * K_TABLE ifexists table_name
          command ::= K_DROP * K_POPULATION ifexists population_name
          command ::= K_DROP * K_GENERATOR ifexists generator_name
          command ::= K_DROP * model_token modelset_opt K_FROM generator_name
          model_token ::= * K_MODEL
          model_token ::= * K_MODELS

                       K_TABLE shift  215
                  K_POPULATION shift  213
                   K_GENERATOR shift  211
                      K_MODELS shift  658
                       K_MODEL shift  659
                   model_token shift  103

State 142:
     (61) generator_schema ::= generator_schemum *
          generator_schemum ::= generator_schemum * gs_token
          gs_token ::= * T_LROUND generator_schemum T_RROUND
          gs_token ::= * ANY

                       T_COMMA reduce 61
                      T_LROUND shift  291
                      T_RROUND reduce 61
                      T_RCURLY reduce 61
                           ANY shift  544
                      gs_token shift  546

State 143:
     (62) generator_schema ::= generator_schema T_COMMA generator_schemum *
          generator_schemum ::= generator_schemum * gs_token
          gs_token ::= * T_LROUND generator_schemum T_RROUND
          gs_token ::= * ANY

                       T_COMMA reduce 62
                      T_LROUND shift  291
                      T_RROUND reduce 62
                      T_RCURLY reduce 62
                           ANY shift  544
                      gs_token shift  546

State 144:
     (56) altergen_cmd ::= generator_schemum *
          generator_schemum ::= generator_schemum * gs_token
          gs_token ::= * T_LROUND generator_schemum T_RROUND
          gs_token ::= * ANY

                        T_SEMI reduce 56
                       T_COMMA reduce 56
                      T_LROUND shift  291
                           ANY shift  544
                      gs_token shift  546

State 145:
          from_est ::= K_FROM * population_name
          from_est ::= K_FROM * K_PAIRWISE population_name
          from_est ::= K_FROM * K_COLUMNS|K_VARIABLES K_OF population_name
          from_est ::= K_FROM * K_PAIRWISE K_COLUMNS|K_VARIABLES K_OF population_name for
          population_name ::= * L_NAME

                        L_NAME shift  654
                     K_COLUMNS shift  429
                    K_PAIRWISE shift  153
                   K_VARIABLES shift  429
               population_name shift  600

State 146:
          estimate ::= K_ESTIMATE select_quant select_columns * from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estby ::= K_ESTIMATE select_quant select_columns * K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          select_columns ::= select_columns * T_COMMA select_column
          from_est ::= * K_FROM population_name
          from_est ::= * K_FROM K_PAIRWISE population_name
          from_est ::= * K_FROM K_COLUMNS|K_VARIABLES K_OF population_name
          from_est ::= * K_FROM K_PAIRWISE K_COLUMNS|K_VARIABLES K_OF population_name for

                        K_FROM shift  145
                       T_COMMA shift  13
                          K_BY shift  243
                      K_WITHIN shift  243
                      from_est shift  181

State 147:
          estimate ::= K_ESTIMATE * select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt
          estcol ::= K_ESTIMATE * K_COLUMNS error T_SEMI
          estpairrow ::= K_ESTIMATE * K_PAIRWISE K_ROW error T_SEMI
          estpaircol ::= K_ESTIMATE * K_PAIRWISE error T_SEMI
          estby ::= K_ESTIMATE * select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          select_quant ::= * K_DISTINCT
          select_quant ::= * K_ALL
    (143) select_quant ::= *

                     K_COLUMNS shift  294
                    K_PAIRWISE shift  238
                    K_DISTINCT shift  592
                         K_ALL shift  591
                  select_quant shift  9
                     {default} reduce 143

State 148:
          command ::= K_CREATE * temp_opt K_TABLE ifnotexists table_name K_AS query
          command ::= K_CREATE * temp_opt K_TABLE ifnotexists table_name K_FROM pathname
          command ::= K_CREATE * K_POPULATION ifnotexists population_name K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
          command ::= K_CREATE * K_POPULATION ifnotexists K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
          command ::= K_CREATE * K_GENERATOR ifnotexists generator_name K_FOR population_name backend_name_opt generator_schema_opt
          command ::= K_CREATE * K_GENERATOR ifnotexists K_FOR population_name backend_name_opt generator_schema_opt
     (70) temp_opt ::= *
          temp_opt ::= * K_TEMP|K_TEMPORARY

                  K_POPULATION shift  229
                   K_GENERATOR shift  221
                        K_TEMP shift  540
                   K_TEMPORARY shift  540
                      temp_opt shift  505
                     {default} reduce 70

State 149:
          analysis_program ::= analysis_program * analysis_token
          analysis_token ::= * T_LROUND analysis_program T_RROUND
          analysis_token ::= T_LROUND analysis_program * T_RROUND
          analysis_token ::= * ANY

                      T_LROUND shift  289
                      T_RROUND shift  514
                           ANY shift  513
                analysis_token shift  515

State 150:
          analysis_program_opt ::= T_LROUND analysis_program * T_RROUND
          analysis_program ::= analysis_program * analysis_token
          analysis_token ::= * T_LROUND analysis_program T_RROUND
          analysis_token ::= * ANY

                      T_LROUND shift  289
                      T_RROUND shift  516
                           ANY shift  513
                analysis_token shift  515

State 151:
          alterpop_cmds ::= alterpop_cmds T_COMMA * alterpop_cmd
          alterpop_cmd ::= * K_RENAME K_TO population_name
          alterpop_cmd ::= * K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO stattype
          alterpop_cmd ::= * K_ADD K_VARIABLE column_name stattype_opt

                      K_RENAME shift  383
                         K_SET shift  343
                         K_ADD shift  381
                  alterpop_cmd shift  529

State 152:
          generator_schemum ::= generator_schemum * gs_token
          gs_token ::= * T_LROUND generator_schemum T_RROUND
          gs_token ::= T_LROUND generator_schemum * T_RROUND
          gs_token ::= * ANY

                      T_LROUND shift  291
                      T_RROUND shift  545
                           ANY shift  544
                      gs_token shift  546

State 153:
          from_est ::= K_FROM K_PAIRWISE * population_name
          from_est ::= K_FROM K_PAIRWISE * K_COLUMNS|K_VARIABLES K_OF population_name for
          population_name ::= * L_NAME

                        L_NAME shift  654
                     K_COLUMNS shift  430
                   K_VARIABLES shift  430
               population_name shift  599

State 154:
          select_column ::= table_name T_DOT * T_STAR
          select_column ::= table_name T_DOT * T_LROUND query T_RROUND
          column_name ::= * L_NAME
          primary ::= table_name T_DOT * column_name

                      T_LROUND shift  75
                        L_NAME shift  703
                        T_STAR shift  651
                   column_name shift  649

State 155:
          type ::= typename T_LROUND typearg T_COMMA * typearg T_RROUND
          typearg ::= * L_INTEGER
          typearg ::= * T_PLUS L_INTEGER
          typearg ::= * T_MINUS L_INTEGER

                     L_INTEGER shift  669
                       T_MINUS shift  463
                        T_PLUS shift  464
                       typearg shift  465

State 156:
          type ::= typename T_LROUND * typearg T_RROUND
          type ::= typename T_LROUND * typearg T_COMMA typearg T_RROUND
          typearg ::= * L_INTEGER
          typearg ::= * T_PLUS L_INTEGER
          typearg ::= * T_MINUS L_INTEGER

                     L_INTEGER shift  669
                       T_MINUS shift  463
                        T_PLUS shift  464
                       typearg shift  358

State 157:
          bqlfn ::= K_CORRELATION * ofwith
          bqlfn ::= K_CORRELATION * K_PVALUE ofwith
    (301) ofwith ::= *
          ofwith ::= * K_WITH column_name
          ofwith ::= * K_OF column_name K_WITH column_name

                        K_WITH shift  278
                          K_OF shift  277
                      K_PVALUE shift  176
                        ofwith shift  676
                     {default} reduce 301

State 158:
          bqlfn ::= K_SIMILARITY * K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= K_SIMILARITY * K_TO T_LROUND expression T_RROUND wrt
          bqlfn ::= K_SIMILARITY * wrt
          wrt ::= * K_IN K_THE K_CONTEXT K_OF column_list

                          K_TO shift  442
                          K_OF shift  484
                          K_IN shift  478
                           wrt shift  608

State 159:
          column_name ::= * L_NAME
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF * column_name T_EQ unary
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF * T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF * column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF * T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF * K_VALUE unary
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF * K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND

                      T_LROUND shift  92
                        L_NAME shift  703
                       K_VALUE shift  83
                   column_name shift  490

State 160:
          command ::= K_REGRESS column_name K_GIVEN T_LROUND select_columns T_RROUND nsamples_opt K_BY|K_WITHIN population_name * modeledby_opt usingmodel_opt
    (158) modeledby_opt ::= *
          modeledby_opt ::= * K_MODELED|K_MODELLED K_BY generator_name

                     K_MODELED shift  456
                    K_MODELLED shift  456
                 modeledby_opt shift  184
                     {default} reduce 158

State 161:
          command ::= K_INITIALIZE L_INTEGER * model_token ifnotexists K_FOR generator_name
          model_token ::= * K_MODEL
          model_token ::= * K_MODELS

                      K_MODELS shift  658
                       K_MODEL shift  659
                   model_token shift  196

State 162:
          altertab_cmd ::= K_RENAME * K_TO table_name
          altertab_cmd ::= K_RENAME * k_column_opt column_name K_TO column_name
     (18) k_column_opt ::= *
          k_column_opt ::= * K_COLUMN

                          K_TO shift  206
                      K_COLUMN shift  531
                  k_column_opt shift  205
                     {default} reduce 18

State 163:
          command ::= K_CREATE K_GENERATOR ifnotexists K_FOR population_name backend_name_opt * generator_schema_opt
     (59) generator_schema_opt ::= *
          generator_schema_opt ::= * T_LROUND|T_LCURLY generator_schema T_RROUND|T_RCURLY

                      T_LROUND shift  140
                      T_LCURLY shift  140
          generator_schema_opt shift  541
                     {default} reduce 59

State 164:
          command ::= K_CREATE K_GENERATOR ifnotexists generator_name K_FOR population_name backend_name_opt * generator_schema_opt
     (59) generator_schema_opt ::= *
          generator_schema_opt ::= * T_LROUND|T_LCURLY generator_schema T_RROUND|T_RCURLY

                      T_LROUND shift  140
                      T_LCURLY shift  140
          generator_schema_opt shift  548
                     {default} reduce 59

State 165:
          command ::= K_CREATE K_GENERATOR ifnotexists * generator_name K_FOR population_name backend_name_opt generator_schema_opt
          command ::= K_CREATE K_GENERATOR ifnotexists * K_FOR population_name backend_name_opt generator_schema_opt
          generator_name ::= * L_NAME

                         K_FOR shift  217
                        L_NAME shift  656
                generator_name shift  390

State 166:
          pop_clause ::= K_GUESS * stattypes_of_opt pop_columns_guess
     (47) stattypes_of_opt ::= *
          stattypes_of_opt ::= * K_STATTYPE|K_STATTYPES K_OF

                   K_STATTYPES shift  392
                    K_STATTYPE shift  392
              stattypes_of_opt shift  100
                     {default} reduce 47

State 167:
          command ::= K_CREATE K_POPULATION ifnotexists * population_name K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
          command ::= K_CREATE K_POPULATION ifnotexists * K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
          population_name ::= * L_NAME

                         K_FOR shift  223
                        L_NAME shift  654
               population_name shift  398

State 168:
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows * wrt
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows * K_AND hypothetical_rows wrt
          wrt ::= * K_IN K_THE K_CONTEXT K_OF column_list

                         K_AND shift  236
                          K_IN shift  478
                           wrt shift  588

State 169:
          estby ::= K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name * modeledby_opt usingmodel_opt
    (158) modeledby_opt ::= *
          modeledby_opt ::= * K_MODELED|K_MODELLED K_BY generator_name

                     K_MODELED shift  456
                    K_MODELLED shift  456
                 modeledby_opt shift  242
                     {default} reduce 158

State 170:
          infer ::= K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name * modeledby_opt usingmodel_opt where group_by order_by limit_opt
    (158) modeledby_opt ::= *
          modeledby_opt ::= * K_MODELED|K_MODELLED K_BY generator_name

                     K_MODELED shift  456
                    K_MODELLED shift  456
                 modeledby_opt shift  253
                     {default} reduce 158

State 171:
          primary ::= K_CASE case_key_opt case_whens_opt * case_else_opt K_END
          case_whens_opt ::= case_whens_opt * K_WHEN expression K_THEN expression
    (328) case_else_opt ::= *
          case_else_opt ::= * K_ELSE expression

                        K_WHEN shift  27
                        K_ELSE shift  25
                 case_else_opt shift  450
                     {default} reduce 328

State 172:
          simulate ::= K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name * modeledby_opt
    (158) modeledby_opt ::= *
          modeledby_opt ::= * K_MODELED|K_MODELLED K_BY generator_name

                     K_MODELED shift  456
                    K_MODELLED shift  456
                 modeledby_opt shift  655
                     {default} reduce 158

State 173:
          usingmodel_opt ::= K_USING * model_token modelset
          model_token ::= * K_MODEL
          model_token ::= * K_MODELS

                      K_MODELS shift  658
                       K_MODEL shift  659
                   model_token shift  134

State 174:
          simulate ::= K_SIMULATE select_columns K_FROM population_name * modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= K_SIMULATE select_columns K_FROM population_name * modeledby_opt usingmodel_opt given_opt
    (158) modeledby_opt ::= *
          modeledby_opt ::= * K_MODELED|K_MODELLED K_BY generator_name

                     K_MODELED shift  456
                    K_MODELLED shift  456
                 modeledby_opt shift  265
                     {default} reduce 158

State 175:
          simulate ::= K_SIMULATE select_columns K_FROM * population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= K_SIMULATE select_columns K_FROM * population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= K_SIMULATE select_columns K_FROM * K_MODELS K_OF population_name modeledby_opt
          population_name ::= * L_NAME

                        L_NAME shift  654
                      K_MODELS shift  455
               population_name shift  174

State 176:
          bqlfn ::= K_CORRELATION K_PVALUE * ofwith
    (301) ofwith ::= *
          ofwith ::= * K_WITH column_name
          ofwith ::= * K_OF column_name K_WITH column_name

                        K_WITH shift  278
                          K_OF shift  277
                        ofwith shift  675
                     {default} reduce 301

State 177:
          infer ::= K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name * modeledby_opt usingmodel_opt where group_by order_by limit_opt
    (158) modeledby_opt ::= *
          modeledby_opt ::= * K_MODELED|K_MODELLED K_BY generator_name

                     K_MODELED shift  456
                    K_MODELLED shift  456
                 modeledby_opt shift  271
                     {default} reduce 158

State 178:
          bqlfn ::= K_MUTUAL K_INFORMATION * ofwithmulti mi_given_opt nsamples_opt
    (283) ofwithmulti ::= *
          ofwithmulti ::= * K_WITH mi_columns
          ofwithmulti ::= * K_OF mi_columns K_WITH mi_columns

                        K_WITH shift  119
                          K_OF shift  118
                   ofwithmulti shift  275
                     {default} reduce 283

State 179:
          bqlfn ::= K_DEPENDENCE K_PROBABILITY * ofwith
    (301) ofwith ::= *
          ofwith ::= * K_WITH column_name
          ofwith ::= * K_OF column_name K_WITH column_name

                        K_WITH shift  278
                          K_OF shift  277
                        ofwith shift  686
                     {default} reduce 301

State 180:
          order_key ::= expression * order_sense
    (185) order_sense ::= *
          order_sense ::= * K_ASC
          order_sense ::= * K_DESC

                         K_ASC shift  695
                        K_DESC shift  694
                   order_sense shift  696
                     {default} reduce 185

State 181:
          estimate ::= K_ESTIMATE select_quant select_columns from_est * modeledby_opt usingmodel_opt where group_by order_by limit_opt
    (158) modeledby_opt ::= *
          modeledby_opt ::= * K_MODELED|K_MODELLED K_BY generator_name

                     K_MODELED shift  456
                    K_MODELLED shift  456
                 modeledby_opt shift  283
                     {default} reduce 158

State 182:
          select ::= K_SELECT select_quant select_columns * from_sel_opt where group_by order_by limit_opt
          select_columns ::= select_columns * T_COMMA select_column
    (152) from_sel_opt ::= *
          from_sel_opt ::= * K_FROM select_tables

                        K_FROM shift  101
                       T_COMMA shift  13
                  from_sel_opt shift  286
                     {default} reduce 152

State 183:
          select ::= K_SELECT * select_quant select_columns from_sel_opt where group_by order_by limit_opt
          select_quant ::= * K_DISTINCT
          select_quant ::= * K_ALL
    (143) select_quant ::= *

                    K_DISTINCT shift  592
                         K_ALL shift  591
                  select_quant shift  10
                     {default} reduce 143

State 184:
          command ::= K_REGRESS column_name K_GIVEN T_LROUND select_columns T_RROUND nsamples_opt K_BY|K_WITHIN population_name modeledby_opt * usingmodel_opt
    (160) usingmodel_opt ::= *
          usingmodel_opt ::= * K_USING model_token modelset

                       K_USING shift  173
                usingmodel_opt shift  507
                     {default} reduce 160

State 185:
          command ::= K_REGRESS column_name K_GIVEN T_LROUND select_columns T_RROUND nsamples_opt K_BY|K_WITHIN * population_name modeledby_opt usingmodel_opt
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  160

State 186:
          command ::= K_REGRESS column_name K_GIVEN T_LROUND select_columns T_RROUND * nsamples_opt K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
    (304) nsamples_opt ::= *
          nsamples_opt ::= * K_USING primary K_SAMPLES

                       K_USING shift  89
                  nsamples_opt shift  339
                     {default} reduce 304

State 187:
          command ::= K_REGRESS * column_name K_GIVEN T_LROUND select_columns T_RROUND nsamples_opt K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  371

State 188:
          anlimit ::= K_FOR anduration K_OR * anduration
          anduration ::= * L_INTEGER K_ITERATION|K_ITERATIONS
          anduration ::= * L_INTEGER K_MINUTE|K_MINUTES
          anduration ::= * L_INTEGER K_SECOND|K_SECONDS

                     L_INTEGER shift  297
                    anduration shift  508

State 189:
          anlimit ::= K_FOR * anduration
          anlimit ::= K_FOR * anduration K_OR anduration
          anduration ::= * L_INTEGER K_ITERATION|K_ITERATIONS
          anduration ::= * L_INTEGER K_MINUTE|K_MINUTES
          anduration ::= * L_INTEGER K_SECOND|K_SECONDS

                     L_INTEGER shift  297
                    anduration shift  373

State 190:
          anckpt_opt ::= K_CHECKPOINT * anduration
          anduration ::= * L_INTEGER K_ITERATION|K_ITERATIONS
          anduration ::= * L_INTEGER K_MINUTE|K_MINUTES
          anduration ::= * L_INTEGER K_SECOND|K_SECONDS

                     L_INTEGER shift  297
                    anduration shift  512

State 191:
          command ::= K_ANALYZE generator_name anmodelset_opt anlimit anckpt_opt * analysis_program_opt
     (93) analysis_program_opt ::= *
          analysis_program_opt ::= * T_LROUND analysis_program T_RROUND

                      T_LROUND shift  290
          analysis_program_opt shift  517
                     {default} reduce 93

State 192:
          command ::= K_ANALYZE generator_name anmodelset_opt anlimit * anckpt_opt analysis_program_opt
     (88) anckpt_opt ::= *
          anckpt_opt ::= * K_CHECKPOINT anduration

                  K_CHECKPOINT shift  190
                    anckpt_opt shift  191
                     {default} reduce 88

State 193:
          command ::= K_ANALYZE generator_name anmodelset_opt * anlimit anckpt_opt analysis_program_opt
          anlimit ::= * K_FOR anduration
          anlimit ::= * K_FOR anduration K_OR anduration

                         K_FOR shift  189
                       anlimit shift  192

State 194:
          command ::= K_ANALYZE * generator_name anmodelset_opt anlimit anckpt_opt analysis_program_opt
          generator_name ::= * L_NAME

                        L_NAME shift  656
                generator_name shift  113

State 195:
          command ::= K_INITIALIZE L_INTEGER model_token ifnotexists K_FOR * generator_name
          generator_name ::= * L_NAME

                        L_NAME shift  656
                generator_name shift  518

State 196:
          command ::= K_INITIALIZE L_INTEGER model_token * ifnotexists K_FOR generator_name
     (74) ifnotexists ::= *
          ifnotexists ::= * K_IF K_NOT K_EXISTS

                          K_IF shift  400
                   ifnotexists shift  374
                     {default} reduce 74

State 197:
          command ::= K_GUESS K_SCHEMA K_FOR * table_name
          table_name ::= * L_NAME

                        L_NAME shift  566
                    table_name shift  519

State 198:
          altergen_cmd ::= K_RENAME K_TO * generator_name
          generator_name ::= * L_NAME

                        L_NAME shift  656
                generator_name shift  522

State 199:
          command ::= K_ALTER K_GENERATOR * generator_name anmodelset_matched_opt altergen_cmds
          generator_name ::= * L_NAME

                        L_NAME shift  656
                generator_name shift  114

State 200:
          alterpop_cmd ::= K_ADD K_VARIABLE * column_name stattype_opt
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  126

State 201:
          alterpop_cmd ::= K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO * stattype
          stattype ::= * L_NAME

                        L_NAME shift  558
                      stattype shift  527

State 202:
          alterpop_cmd ::= K_RENAME K_TO * population_name
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  528

State 203:
          command ::= K_ALTER K_POPULATION * population_name alterpop_cmds
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  109

State 204:
          altertab_cmd ::= K_RENAME k_column_opt column_name K_TO * column_name
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  532

State 205:
          altertab_cmd ::= K_RENAME k_column_opt * column_name K_TO column_name
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  385

State 206:
          altertab_cmd ::= K_RENAME K_TO * table_name
          table_name ::= * L_NAME

                        L_NAME shift  566
                    table_name shift  533

State 207:
          altertab_cmds ::= altertab_cmds T_COMMA * altertab_cmd
          altertab_cmd ::= * K_RENAME K_TO table_name
          altertab_cmd ::= * K_RENAME k_column_opt column_name K_TO column_name

                      K_RENAME shift  162
                  altertab_cmd shift  534

State 208:
          command ::= K_ALTER K_TABLE * table_name altertab_cmds
          table_name ::= * L_NAME

                        L_NAME shift  566
                    table_name shift  128

State 209:
          command ::= K_DROP model_token modelset_opt K_FROM * generator_name
          generator_name ::= * L_NAME

                        L_NAME shift  656
                generator_name shift  535

State 210:
          command ::= K_DROP K_GENERATOR ifexists * generator_name
          generator_name ::= * L_NAME

                        L_NAME shift  656
                generator_name shift  536

State 211:
          command ::= K_DROP K_GENERATOR * ifexists generator_name
     (72) ifexists ::= *
          ifexists ::= * K_IF K_EXISTS

                          K_IF shift  389
                      ifexists shift  210
                     {default} reduce 72

State 212:
          command ::= K_DROP K_POPULATION ifexists * population_name
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  537

State 213:
          command ::= K_DROP K_POPULATION * ifexists population_name
     (72) ifexists ::= *
          ifexists ::= * K_IF K_EXISTS

                          K_IF shift  389
                      ifexists shift  212
                     {default} reduce 72

State 214:
          command ::= K_DROP K_TABLE ifexists * table_name
          table_name ::= * L_NAME

                        L_NAME shift  566
                    table_name shift  539

State 215:
          command ::= K_DROP K_TABLE * ifexists table_name
     (72) ifexists ::= *
          ifexists ::= * K_IF K_EXISTS

                          K_IF shift  389
                      ifexists shift  214
                     {default} reduce 72

State 216:
          command ::= K_CREATE K_GENERATOR ifnotexists K_FOR population_name * backend_name_opt generator_schema_opt
     (57) backend_name_opt ::= *
          backend_name_opt ::= * K_USING backend_name

                       K_USING shift  218
              backend_name_opt shift  163
                     {default} reduce 57

State 217:
          command ::= K_CREATE K_GENERATOR ifnotexists K_FOR * population_name backend_name_opt generator_schema_opt
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  216

State 218:
          backend_name_opt ::= K_USING * backend_name
          backend_name ::= * L_NAME

                        L_NAME shift  542
                  backend_name shift  543

State 219:
          command ::= K_CREATE K_GENERATOR ifnotexists generator_name K_FOR population_name * backend_name_opt generator_schema_opt
     (57) backend_name_opt ::= *
          backend_name_opt ::= * K_USING backend_name

                       K_USING shift  218
              backend_name_opt shift  164
                     {default} reduce 57

State 220:
          command ::= K_CREATE K_GENERATOR ifnotexists generator_name K_FOR * population_name backend_name_opt generator_schema_opt
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  219

State 221:
          command ::= K_CREATE K_GENERATOR * ifnotexists generator_name K_FOR population_name backend_name_opt generator_schema_opt
          command ::= K_CREATE K_GENERATOR * ifnotexists K_FOR population_name backend_name_opt generator_schema_opt
     (74) ifnotexists ::= *
          ifnotexists ::= * K_IF K_NOT K_EXISTS

                          K_IF shift  400
                   ifnotexists shift  165
                     {default} reduce 74

State 222:
          command ::= K_CREATE K_POPULATION ifnotexists K_FOR table_name * with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
     (25) with_schema_opt ::= *
          with_schema_opt ::= * K_WITH K_SCHEMA

                        K_WITH shift  391
               with_schema_opt shift  344
                     {default} reduce 25

State 223:
          command ::= K_CREATE K_POPULATION ifnotexists K_FOR * table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
          table_name ::= * L_NAME

                        L_NAME shift  566
                    table_name shift  222

State 224:
          pop_columns ::= pop_columns T_COMMA * column_name
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  556

State 225:
          pop_clause ::= K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO * stattype
          stattype ::= * L_NAME

                        L_NAME shift  558
                      stattype shift  557

State 226:
          pop_clause ::= column_name * stattype
          stattype ::= * L_NAME

                        L_NAME shift  558
                      stattype shift  559

State 227:
          command ::= K_CREATE K_POPULATION ifnotexists population_name K_FOR table_name * with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
     (25) with_schema_opt ::= *
          with_schema_opt ::= * K_WITH K_SCHEMA

                        K_WITH shift  391
               with_schema_opt shift  347
                     {default} reduce 25

State 228:
          command ::= K_CREATE K_POPULATION ifnotexists population_name K_FOR * table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
          table_name ::= * L_NAME

                        L_NAME shift  566
                    table_name shift  227

State 229:
          command ::= K_CREATE K_POPULATION * ifnotexists population_name K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
          command ::= K_CREATE K_POPULATION * ifnotexists K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY
     (74) ifnotexists ::= *
          ifnotexists ::= * K_IF K_NOT K_EXISTS

                          K_IF shift  400
                   ifnotexists shift  167
                     {default} reduce 74

State 230:
          command ::= K_CREATE temp_opt K_TABLE ifnotexists table_name K_FROM * pathname
          pathname ::= * L_STRING

                      L_STRING shift  563
                      pathname shift  564

State 231:
    (150) as ::= *
          as ::= * K_AS L_NAME
          select_table ::= T_LROUND query T_RROUND * as

                          K_AS shift  452
                            as shift  567
                     {default} reduce 150

State 232:
    (150) as ::= *
          as ::= * K_AS L_NAME
          select_table ::= table_name * as

                          K_AS shift  452
                            as shift  568
                     {default} reduce 150

State 233:
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows * wrt
          wrt ::= * K_IN K_THE K_CONTEXT K_OF column_list

                          K_IN shift  478
                           wrt shift  583

State 234:
          constraints_list ::= * T_LROUND constraints T_RROUND
          constraints_list ::= * constraints_list T_COMMA T_LROUND constraints T_RROUND
          hypothetical_rows ::= K_HYPOTHETICAL K_ROWS K_WITH K_VALUES T_LROUND * constraints_list T_RROUND

                      T_LROUND shift  105
              constraints_list shift  350

State 235:
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows * wrt
          wrt ::= * K_IN K_THE K_CONTEXT K_OF column_list

                          K_IN shift  478
                           wrt shift  587

State 236:
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND * hypothetical_rows wrt
          hypothetical_rows ::= * K_HYPOTHETICAL K_ROWS K_WITH K_VALUES T_LROUND constraints_list T_RROUND

                K_HYPOTHETICAL shift  421
             hypothetical_rows shift  235

State 237:
          bqlfn ::= K_PREDICTIVE K_RELEVANCE * predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= K_PREDICTIVE K_RELEVANCE * predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= K_PREDICTIVE K_RELEVANCE * predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt
    (279) predrel_of_opt ::= *
          predrel_of_opt ::= * K_OF T_LROUND expression T_RROUND

                          K_OF shift  413
                predrel_of_opt shift  422
                     {default} reduce 279

State 238:
          estpairrow ::= K_ESTIMATE K_PAIRWISE * K_ROW error T_SEMI
          estpaircol ::= K_ESTIMATE K_PAIRWISE * error T_SEMI

                         K_ROW shift  293
                         error shift  426

State 239:
          from_est ::= K_FROM K_COLUMNS|K_VARIABLES K_OF * population_name
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  596

State 240:
          from_est ::= K_FROM K_PAIRWISE K_COLUMNS|K_VARIABLES K_OF population_name * for
    (166) for ::= *
          for ::= * K_FOR column_lists

                         K_FOR shift  97
                           for shift  598
                     {default} reduce 166

State 241:
          from_est ::= K_FROM K_PAIRWISE K_COLUMNS|K_VARIABLES K_OF * population_name for
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  240

State 242:
          estby ::= K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt * usingmodel_opt
    (160) usingmodel_opt ::= *
          usingmodel_opt ::= * K_USING model_token modelset

                       K_USING shift  173
                usingmodel_opt shift  601
                     {default} reduce 160

State 243:
          estby ::= K_ESTIMATE select_quant select_columns K_BY|K_WITHIN * population_name modeledby_opt usingmodel_opt
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  169

State 244:
          bqlfn ::= K_SIMILARITY K_TO T_LROUND expression T_RROUND * wrt
          wrt ::= * K_IN K_THE K_CONTEXT K_OF column_list

                          K_IN shift  478
                           wrt shift  609

State 245:
          column_name ::= * L_NAME
          mi_column_list ::= mi_column_list T_COMMA * column_name

                        L_NAME shift  703
                   column_name shift  612

State 246:
          conf_opt ::= K_CONFIDENCE * column_name
          column_name ::= * L_NAME

                        L_NAME shift  703
                   column_name shift  624

State 247:
          infer_exp_column ::= K_PREDICT column_name as conf_opt * nsamples_opt
    (304) nsamples_opt ::= *
          nsamples_opt ::= * K_USING primary K_SAMPLES

                       K_USING shift  89
                  nsamples_opt shift  625
                     {default} reduce 304

State 248:
          infer_exp_column ::= K_PREDICT column_name as * conf_opt nsamples_opt
    (127) conf_opt ::= *
          conf_opt ::= * K_CONFIDENCE column_name

                  K_CONFIDENCE shift  246
                      conf_opt shift  247
                     {default} reduce 127

State 249:
          infer_exp_column ::= K_PREDICT * column_name as conf_opt nsamples_opt
          column_name ::= * L_NAME
          bqlfn ::= K_PREDICT * column_name withconf nsamples_opt

                        L_NAME shift  703
                   column_name shift  120

State 250:
          infer ::= K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by * order_by limit_opt
    (180) order_by ::= *
          order_by ::= * K_ORDER K_BY order_keys

                       K_ORDER shift  496
                      order_by shift  133
                     {default} reduce 180

State 251:
          infer ::= K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where * group_by order_by limit_opt
    (177) group_by ::= *
          group_by ::= * K_GROUP K_BY expressions
          group_by ::= * K_GROUP K_BY expressions K_HAVING expression

                       K_GROUP shift  470
                      group_by shift  250
                     {default} reduce 177

State 252:
          infer ::= K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt * where group_by order_by limit_opt
    (168) where ::= *
          where ::= * K_WHERE expression

                       K_WHERE shift  24
                         where shift  251
                     {default} reduce 168

State 253:
          infer ::= K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt * usingmodel_opt where group_by order_by limit_opt
    (160) usingmodel_opt ::= *
          usingmodel_opt ::= * K_USING model_token modelset

                       K_USING shift  173
                usingmodel_opt shift  252
                     {default} reduce 160

State 254:
          infer ::= K_INFER K_EXPLICIT infer_exp_columns K_FROM * population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  170

State 255:
          infer_auto_column ::= column_name * as
    (150) as ::= *
          as ::= * K_AS L_NAME

                          K_AS shift  452
                            as shift  630
                     {default} reduce 150

State 256:
          bqlfn ::= K_PREDICT column_name withconf * nsamples_opt
    (304) nsamples_opt ::= *
          nsamples_opt ::= * K_USING primary K_SAMPLES

                       K_USING shift  89
                  nsamples_opt shift  635
                     {default} reduce 304

State 257:
          column_name ::= * L_NAME
          primary ::= table_name T_DOT * column_name

                        L_NAME shift  703
                   column_name shift  649

State 258:
          select_column ::= expression * as
    (150) as ::= *
          as ::= * K_AS L_NAME

                          K_AS shift  452
                            as shift  648
                     {default} reduce 150

State 259:
          simulate ::= K_SIMULATE select_columns K_FROM K_MODELS K_OF * population_name modeledby_opt
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  172

State 260:
          modeledby_opt ::= K_MODELED|K_MODELLED K_BY * generator_name
          generator_name ::= * L_NAME

                        L_NAME shift  656
                generator_name shift  657

State 261:
          modelset ::= modelset T_COMMA * modelrange
          modelrange ::= * L_INTEGER
          modelrange ::= * L_INTEGER T_MINUS L_INTEGER

                     L_INTEGER shift  458
                    modelrange shift  661

State 262:
          simulate ::= K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit * accuracy_opt
    (188) accuracy_opt ::= *
          accuracy_opt ::= * K_ACCURACY L_INTEGER

                    K_ACCURACY shift  461
                  accuracy_opt shift  664
                     {default} reduce 188

State 263:
          simulate ::= K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt * limit accuracy_opt
    (130) simulate ::= K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt *
          limit ::= * K_LIMIT expression
          limit ::= * K_LIMIT expression K_OFFSET expression
          limit ::= * K_LIMIT expression T_COMMA expression

                       K_LIMIT shift  34
                         limit shift  262
                     {default} reduce 130

State 264:
          simulate ::= K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt * given_opt limit accuracy_opt
          simulate ::= K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt * given_opt
    (131) given_opt ::= *
          given_opt ::= * K_GIVEN constraints

                       K_GIVEN shift  107
                     given_opt shift  263
                     {default} reduce 131

State 265:
          simulate ::= K_SIMULATE select_columns K_FROM population_name modeledby_opt * usingmodel_opt given_opt limit accuracy_opt
          simulate ::= K_SIMULATE select_columns K_FROM population_name modeledby_opt * usingmodel_opt given_opt
    (160) usingmodel_opt ::= *
          usingmodel_opt ::= * K_USING model_token modelset

                       K_USING shift  173
                usingmodel_opt shift  264
                     {default} reduce 160

State 266:
          withconf ::= * K_WITH K_CONFIDENCE primary
          bqlfn ::= K_PREDICT column_name * withconf nsamples_opt

                        K_WITH shift  469
                      withconf shift  256

State 267:
          column_name ::= * L_NAME
          bqlfn ::= K_PREDICT * column_name withconf nsamples_opt

                        L_NAME shift  703
                   column_name shift  266

State 268:
          infer ::= K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by * order_by limit_opt
    (180) order_by ::= *
          order_by ::= * K_ORDER K_BY order_keys

                       K_ORDER shift  496
                      order_by shift  136
                     {default} reduce 180

State 269:
          infer ::= K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where * group_by order_by limit_opt
    (177) group_by ::= *
          group_by ::= * K_GROUP K_BY expressions
          group_by ::= * K_GROUP K_BY expressions K_HAVING expression

                       K_GROUP shift  470
                      group_by shift  268
                     {default} reduce 177

State 270:
          infer ::= K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt * where group_by order_by limit_opt
    (168) where ::= *
          where ::= * K_WHERE expression

                       K_WHERE shift  24
                         where shift  269
                     {default} reduce 168

State 271:
          infer ::= K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt * usingmodel_opt where group_by order_by limit_opt
    (160) usingmodel_opt ::= *
          usingmodel_opt ::= * K_USING model_token modelset

                       K_USING shift  173
                usingmodel_opt shift  270
                     {default} reduce 160

State 272:
          infer ::= K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM * population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          population_name ::= * L_NAME

                        L_NAME shift  654
               population_name shift  177

State 273:
          infer ::= K_INFER infer_auto_columns withconf_opt * nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
    (304) nsamples_opt ::= *
          nsamples_opt ::= * K_USING primary K_SAMPLES

                       K_USING shift  89
                  nsamples_opt shift  471
                     {default} reduce 304

State 274:
          bqlfn ::= K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt * nsamples_opt
    (304) nsamples_opt ::= *
          nsamples_opt ::= * K_USING primary K_SAMPLES

                       K_USING shift  89
                  nsamples_opt shift  683
                     {default} reduce 304

State 275:
          bqlfn ::= K_MUTUAL K_INFORMATION ofwithmulti * mi_given_opt nsamples_opt
    (290) mi_given_opt ::= *
          mi_given_opt ::= * K_GIVEN T_LROUND mi_constraints T_RROUND

                       K_GIVEN shift  445
                  mi_given_opt shift  274
                     {default} reduce 290

State 276:
          column_name ::= * L_NAME
          ofwith ::= K_OF column_name K_WITH * column_name

                        L_NAME shift  703
                   column_name shift  684

State 277:
          column_name ::= * L_NAME
          ofwith ::= K_OF * column_name K_WITH column_name

                        L_NAME shift  703
                   column_name shift  474

State 278:
          column_name ::= * L_NAME
          ofwith ::= K_WITH * column_name

                        L_NAME shift  703
                   column_name shift  685

State 279:
          bqlfn ::= K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND * wrt
          wrt ::= * K_IN K_THE K_CONTEXT K_OF column_list

                          K_IN shift  478
                           wrt shift  688

State 280:
          estimate ::= K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by * order_by limit_opt
    (180) order_by ::= *
          order_by ::= * K_ORDER K_BY order_keys

                       K_ORDER shift  496
                      order_by shift  138
                     {default} reduce 180

State 281:
          estimate ::= K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where * group_by order_by limit_opt
    (177) group_by ::= *
          group_by ::= * K_GROUP K_BY expressions
          group_by ::= * K_GROUP K_BY expressions K_HAVING expression

                       K_GROUP shift  470
                      group_by shift  280
                     {default} reduce 177

State 282:
          estimate ::= K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt * where group_by order_by limit_opt
    (168) where ::= *
          where ::= * K_WHERE expression

                       K_WHERE shift  24
                         where shift  281
                     {default} reduce 168

State 283:
          estimate ::= K_ESTIMATE select_quant select_columns from_est modeledby_opt * usingmodel_opt where group_by order_by limit_opt
    (160) usingmodel_opt ::= *
          usingmodel_opt ::= * K_USING model_token modelset

                       K_USING shift  173
                usingmodel_opt shift  282
                     {default} reduce 160

State 284:
          select ::= K_SELECT select_quant select_columns from_sel_opt where group_by * order_by limit_opt
    (180) order_by ::= *
          order_by ::= * K_ORDER K_BY order_keys

                       K_ORDER shift  496
                      order_by shift  139
                     {default} reduce 180

State 285:
          select ::= K_SELECT select_quant select_columns from_sel_opt where * group_by order_by limit_opt
    (177) group_by ::= *
          group_by ::= * K_GROUP K_BY expressions
          group_by ::= * K_GROUP K_BY expressions K_HAVING expression

                       K_GROUP shift  470
                      group_by shift  284
                     {default} reduce 177

State 286:
          select ::= K_SELECT select_quant select_columns from_sel_opt * where group_by order_by limit_opt
    (168) where ::= *
          where ::= * K_WHERE expression

                       K_WHERE shift  24
                         where shift  285
                     {default} reduce 168

State 287:
          command ::= K_CREATE temp_opt K_TABLE ifnotexists * table_name K_AS query
          command ::= K_CREATE temp_opt K_TABLE ifnotexists * table_name K_FROM pathname
          table_name ::= * L_NAME

                        L_NAME shift  566
                    table_name shift  369

State 288:
          command ::= K_CREATE temp_opt K_TABLE * ifnotexists table_name K_AS query
          command ::= K_CREATE temp_opt K_TABLE * ifnotexists table_name K_FROM pathname
     (74) ifnotexists ::= *
          ifnotexists ::= * K_IF K_NOT K_EXISTS

                          K_IF shift  400
                   ifnotexists shift  287
                     {default} reduce 74

State 289:
     (95) analysis_program ::= *
          analysis_program ::= * analysis_program analysis_token
          analysis_token ::= T_LROUND * analysis_program T_RROUND

              analysis_program shift  149
                     {default} reduce 95

State 290:
          analysis_program_opt ::= T_LROUND * analysis_program T_RROUND
     (95) analysis_program ::= *
          analysis_program ::= * analysis_program analysis_token

              analysis_program shift  150
                     {default} reduce 95

State 291:
     (63) generator_schemum ::= *
          generator_schemum ::= * generator_schemum gs_token
          gs_token ::= T_LROUND * generator_schemum T_RROUND

             generator_schemum shift  152
                     {default} reduce 63

State 292:
          generator_schema ::= generator_schema T_COMMA * generator_schemum
     (63) generator_schemum ::= *
          generator_schemum ::= * generator_schemum gs_token

             generator_schemum shift  143
                     {default} reduce 63

State 293:
          estpairrow ::= K_ESTIMATE K_PAIRWISE K_ROW * error T_SEMI

                         error shift  427

State 294:
          estcol ::= K_ESTIMATE K_COLUMNS * error T_SEMI

                         error shift  428

State 295:
          primary ::= K_CASE case_key_opt * case_whens_opt case_else_opt K_END
    (326) case_whens_opt ::= *
          case_whens_opt ::= * case_whens_opt K_WHEN expression K_THEN expression

                case_whens_opt shift  171
                     {default} reduce 326

State 296:
    (205) boolean_not ::= equality *
          equality ::= equality * K_IS ordering
          equality ::= equality * K_IS K_NOT ordering
          equality ::= equality * K_LIKE ordering
          equality ::= equality * K_NOT K_LIKE ordering
          equality ::= equality * K_LIKE ordering K_ESCAPE ordering
          equality ::= equality * K_NOT K_LIKE ordering K_ESCAPE ordering
          equality ::= equality * K_GLOB ordering
          equality ::= equality * K_NOT K_GLOB ordering
          equality ::= equality * K_GLOB ordering K_ESCAPE ordering
          equality ::= equality * K_NOT K_GLOB ordering K_ESCAPE ordering
          equality ::= equality * K_REGEXP ordering
          equality ::= equality * K_NOT K_REGEXP ordering
          equality ::= equality * K_REGEXP ordering K_ESCAPE ordering
          equality ::= equality * K_NOT K_REGEXP ordering K_ESCAPE ordering
          equality ::= equality * K_MATCH ordering
          equality ::= equality * K_NOT K_MATCH ordering
          equality ::= equality * K_MATCH ordering K_ESCAPE ordering
          equality ::= equality * K_NOT K_MATCH ordering K_ESCAPE ordering
          equality ::= equality * K_BETWEEN ordering K_AND ordering
          equality ::= equality * K_NOT K_BETWEEN ordering K_AND ordering
          equality ::= equality * K_IN T_LROUND query T_RROUND
          equality ::= equality * K_NOT K_IN T_LROUND query T_RROUND
          equality ::= equality * K_IN T_LROUND expressions_opt T_RROUND
          equality ::= equality * K_NOT K_IN T_LROUND expressions_opt T_RROUND
          equality ::= equality * K_ISNULL
          equality ::= equality * K_NOTNULL
          equality ::= equality * T_NEQ ordering
          equality ::= equality * T_EQ ordering

                         K_NOT shift  298
                          T_EQ shift  39
                          K_IS shift  38
                        K_LIKE shift  60
                        K_GLOB shift  48
                      K_REGEXP shift  46
                       K_MATCH shift  44
                     K_BETWEEN shift  42
                          K_IN shift  408
                      K_ISNULL shift  576
                     K_NOTNULL shift  575
                         T_NEQ shift  40
                     {default} reduce 205

State 297:
          anduration ::= L_INTEGER * K_ITERATION|K_ITERATIONS
          anduration ::= L_INTEGER * K_MINUTE|K_MINUTES
          anduration ::= L_INTEGER * K_SECOND|K_SECONDS

                   K_ITERATION shift  511
                  K_ITERATIONS shift  511
                      K_MINUTE shift  510
                     K_MINUTES shift  510
                      K_SECOND shift  509
                     K_SECONDS shift  509

State 298:
          equality ::= equality K_NOT * K_LIKE ordering
          equality ::= equality K_NOT * K_LIKE ordering K_ESCAPE ordering
          equality ::= equality K_NOT * K_GLOB ordering
          equality ::= equality K_NOT * K_GLOB ordering K_ESCAPE ordering
          equality ::= equality K_NOT * K_REGEXP ordering
          equality ::= equality K_NOT * K_REGEXP ordering K_ESCAPE ordering
          equality ::= equality K_NOT * K_MATCH ordering
          equality ::= equality K_NOT * K_MATCH ordering K_ESCAPE ordering
          equality ::= equality K_NOT * K_BETWEEN ordering K_AND ordering
          equality ::= equality K_NOT * K_IN T_LROUND query T_RROUND
          equality ::= equality K_NOT * K_IN T_LROUND expressions_opt T_RROUND

                        K_LIKE shift  58
                        K_GLOB shift  56
                      K_REGEXP shift  54
                       K_MATCH shift  52
                     K_BETWEEN shift  50
                          K_IN shift  411

State 299:
          equality ::= equality K_BETWEEN ordering * K_AND ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                         K_AND shift  41
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64

State 300:
    (220) equality ::= equality K_MATCH ordering *
          equality ::= equality K_MATCH ordering * K_ESCAPE ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                      K_ESCAPE shift  43
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 220

State 301:
    (216) equality ::= equality K_REGEXP ordering *
          equality ::= equality K_REGEXP ordering * K_ESCAPE ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                      K_ESCAPE shift  45
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 216

State 302:
    (212) equality ::= equality K_GLOB ordering *
          equality ::= equality K_GLOB ordering * K_ESCAPE ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                      K_ESCAPE shift  47
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 212

State 303:
          equality ::= equality K_NOT K_BETWEEN ordering * K_AND ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                         K_AND shift  49
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64

State 304:
    (221) equality ::= equality K_NOT K_MATCH ordering *
          equality ::= equality K_NOT K_MATCH ordering * K_ESCAPE ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                      K_ESCAPE shift  51
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 221

State 305:
    (217) equality ::= equality K_NOT K_REGEXP ordering *
          equality ::= equality K_NOT K_REGEXP ordering * K_ESCAPE ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                      K_ESCAPE shift  53
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 217

State 306:
    (213) equality ::= equality K_NOT K_GLOB ordering *
          equality ::= equality K_NOT K_GLOB ordering * K_ESCAPE ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                      K_ESCAPE shift  55
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 213

State 307:
    (209) equality ::= equality K_NOT K_LIKE ordering *
          equality ::= equality K_NOT K_LIKE ordering * K_ESCAPE ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                      K_ESCAPE shift  57
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 209

State 308:
    (208) equality ::= equality K_LIKE ordering *
          equality ::= equality K_LIKE ordering * K_ESCAPE ordering
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                      K_ESCAPE shift  59
                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 208

State 309:
    (233) equality ::= equality T_EQ ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 233

State 310:
    (232) equality ::= equality T_NEQ ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 232

State 311:
    (224) equality ::= equality K_BETWEEN ordering K_AND ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 224

State 312:
    (222) equality ::= equality K_MATCH ordering K_ESCAPE ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 222

State 313:
    (218) equality ::= equality K_REGEXP ordering K_ESCAPE ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 218

State 314:
    (214) equality ::= equality K_GLOB ordering K_ESCAPE ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 214

State 315:
    (225) equality ::= equality K_NOT K_BETWEEN ordering K_AND ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 225

State 316:
    (223) equality ::= equality K_NOT K_MATCH ordering K_ESCAPE ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 223

State 317:
    (219) equality ::= equality K_NOT K_REGEXP ordering K_ESCAPE ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 219

State 318:
    (215) equality ::= equality K_NOT K_GLOB ordering K_ESCAPE ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 215

State 319:
    (211) equality ::= equality K_NOT K_LIKE ordering K_ESCAPE ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 211

State 320:
    (210) equality ::= equality K_LIKE ordering K_ESCAPE ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 210

State 321:
    (207) equality ::= equality K_IS K_NOT ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 207

State 322:
    (238) ordering ::= ordering T_GT bitwise *
          bitwise ::= bitwise * T_BITAND additive
          bitwise ::= bitwise * T_BITIOR additive
          bitwise ::= bitwise * T_LSHIFT additive
          bitwise ::= bitwise * T_RSHIFT additive

                      T_BITAND shift  71
                      T_BITIOR shift  70
                      T_LSHIFT shift  69
                      T_RSHIFT shift  68
                     {default} reduce 238

State 323:
    (237) ordering ::= ordering T_GEQ bitwise *
          bitwise ::= bitwise * T_BITAND additive
          bitwise ::= bitwise * T_BITIOR additive
          bitwise ::= bitwise * T_LSHIFT additive
          bitwise ::= bitwise * T_RSHIFT additive

                      T_BITAND shift  71
                      T_BITIOR shift  70
                      T_LSHIFT shift  69
                      T_RSHIFT shift  68
                     {default} reduce 237

State 324:
    (239) ordering ::= bitwise *
          bitwise ::= bitwise * T_BITAND additive
          bitwise ::= bitwise * T_BITIOR additive
          bitwise ::= bitwise * T_LSHIFT additive
          bitwise ::= bitwise * T_RSHIFT additive

                      T_BITAND shift  71
                      T_BITIOR shift  70
                      T_LSHIFT shift  69
                      T_RSHIFT shift  68
                     {default} reduce 239

State 325:
    (236) ordering ::= ordering T_LEQ bitwise *
          bitwise ::= bitwise * T_BITAND additive
          bitwise ::= bitwise * T_BITIOR additive
          bitwise ::= bitwise * T_LSHIFT additive
          bitwise ::= bitwise * T_RSHIFT additive

                      T_BITAND shift  71
                      T_BITIOR shift  70
                      T_LSHIFT shift  69
                      T_RSHIFT shift  68
                     {default} reduce 236

State 326:
    (234) equality ::= ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 234

State 327:
    (235) ordering ::= ordering T_LT bitwise *
          bitwise ::= bitwise * T_BITAND additive
          bitwise ::= bitwise * T_BITIOR additive
          bitwise ::= bitwise * T_LSHIFT additive
          bitwise ::= bitwise * T_RSHIFT additive

                      T_BITAND shift  71
                      T_BITIOR shift  70
                      T_LSHIFT shift  69
                      T_RSHIFT shift  68
                     {default} reduce 235

State 328:
    (206) equality ::= equality K_IS ordering *
          ordering ::= ordering * T_LT bitwise
          ordering ::= ordering * T_LEQ bitwise
          ordering ::= ordering * T_GEQ bitwise
          ordering ::= ordering * T_GT bitwise

                          T_LT shift  67
                         T_LEQ shift  66
                         T_GEQ shift  65
                          T_GT shift  64
                     {default} reduce 206

State 329:
          command ::= K_ALTER * K_TABLE table_name altertab_cmds
          command ::= K_ALTER * K_POPULATION population_name alterpop_cmds
          command ::= K_ALTER * K_GENERATOR generator_name anmodelset_matched_opt altergen_cmds

                       K_TABLE shift  208
                  K_POPULATION shift  203
                   K_GENERATOR shift  199

State 330:
          generator_schema_opt ::= T_LROUND|T_LCURLY generator_schema * T_RROUND|T_RCURLY
          generator_schema ::= generator_schema * T_COMMA generator_schemum

                       T_COMMA shift  292
                      T_RROUND shift  547
                      T_RCURLY shift  547

State 331:
          command ::= K_CREATE K_POPULATION ifnotexists K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema * T_RROUND|T_RCURLY
          pop_schema ::= pop_schema * T_SEMI pop_clause

                        T_SEMI shift  108
                      T_RROUND shift  549
                      T_RCURLY shift  549

State 332:
          command ::= K_CREATE K_POPULATION ifnotexists population_name K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema * T_RROUND|T_RCURLY
          pop_schema ::= pop_schema * T_SEMI pop_clause

                        T_SEMI shift  108
                      T_RROUND shift  561
                      T_RCURLY shift  561

State 333:
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists * T_RROUND
          column_lists ::= column_lists * T_COMMA|K_AND column_list

                       T_COMMA shift  111
                      T_RROUND shift  589
                         K_AND shift  111

State 334:
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists * T_RROUND
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists * T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          column_lists ::= column_lists * T_COMMA|K_AND column_list

                       T_COMMA shift  111
                      T_RROUND shift  424
                         K_AND shift  111

State 335:
    (247) additive ::= multiplicative *
          multiplicative ::= multiplicative * T_STAR concatenative
          multiplicative ::= multiplicative * T_SLASH concatenative
          multiplicative ::= multiplicative * T_PERCENT concatenative

                        T_STAR shift  81
                       T_SLASH shift  80
                     T_PERCENT shift  79
                     {default} reduce 247

State 336:
    (246) additive ::= additive T_MINUS multiplicative *
          multiplicative ::= multiplicative * T_STAR concatenative
          multiplicative ::= multiplicative * T_SLASH concatenative
          multiplicative ::= multiplicative * T_PERCENT concatenative

                        T_STAR shift  81
                       T_SLASH shift  80
                     T_PERCENT shift  79
                     {default} reduce 246

State 337:
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists * T_RROUND
          column_lists ::= column_lists * T_COMMA|K_AND column_list

                       T_COMMA shift  111
                      T_RROUND shift  702
                         K_AND shift  111

State 338:
    (245) additive ::= additive T_PLUS multiplicative *
          multiplicative ::= multiplicative * T_STAR concatenative
          multiplicative ::= multiplicative * T_SLASH concatenative
          multiplicative ::= multiplicative * T_PERCENT concatenative

                        T_STAR shift  81
                       T_SLASH shift  80
                     T_PERCENT shift  79
                     {default} reduce 245

State 339:
          command ::= K_REGRESS column_name K_GIVEN T_LROUND select_columns T_RROUND nsamples_opt * K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt

                          K_BY shift  185
                      K_WITHIN shift  185

State 340:
          command ::= K_REGRESS column_name K_GIVEN T_LROUND select_columns * T_RROUND nsamples_opt K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt
          select_columns ::= select_columns * T_COMMA select_column

                       T_COMMA shift  13
                      T_RROUND shift  186

State 341:
          anmodelset_matched_opt ::= model_token T_LROUND modelset * T_RROUND
          modelset ::= modelset * T_COMMA modelrange

                       T_COMMA shift  261
                      T_RROUND shift  520

State 342:
          alterpop_cmd ::= K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns * K_TO stattype
          pop_columns ::= pop_columns * T_COMMA column_name

                       T_COMMA shift  224
                          K_TO shift  201

State 343:
          alterpop_cmd ::= K_SET * K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO stattype

                   K_STATTYPES shift  382
                    K_STATTYPE shift  382

State 344:
          command ::= K_CREATE K_POPULATION ifnotexists K_FOR table_name with_schema_opt * T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY

                      T_LROUND shift  94
                      T_LCURLY shift  94

State 345:
          pop_clause ::= K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns * K_TO stattype
          pop_columns ::= pop_columns * T_COMMA column_name

                       T_COMMA shift  224
                          K_TO shift  225

State 346:
          pop_clause ::= K_SET * K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO stattype

                   K_STATTYPES shift  397
                    K_STATTYPE shift  397

State 347:
          command ::= K_CREATE K_POPULATION ifnotexists population_name K_FOR table_name with_schema_opt * T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY

                      T_LROUND shift  95
                      T_LCURLY shift  95

State 348:
    (192) limit ::= K_LIMIT expression *
          limit ::= K_LIMIT expression * K_OFFSET expression
          limit ::= K_LIMIT expression * T_COMMA expression

                       T_COMMA shift  17
                      K_OFFSET shift  18
                     {default} reduce 192

State 349:
          constraints ::= constraints * T_COMMA constraint
          constraints_list ::= constraints_list T_COMMA T_LROUND constraints * T_RROUND

                       T_COMMA shift  137
                      T_RROUND shift  585

State 350:
          constraints_list ::= constraints_list * T_COMMA T_LROUND constraints T_RROUND
          hypothetical_rows ::= K_HYPOTHETICAL K_ROWS K_WITH K_VALUES T_LROUND constraints_list * T_RROUND

                       T_COMMA shift  417
                      T_RROUND shift  584

State 351:
          constraints ::= constraints * T_COMMA constraint
          constraints_list ::= T_LROUND constraints * T_RROUND

                       T_COMMA shift  137
                      T_RROUND shift  586

State 352:
    (167) for ::= K_FOR column_lists *
          column_lists ::= column_lists * T_COMMA|K_AND column_list

                       T_COMMA shift  111
                         K_AND shift  111
                     {default} reduce 167

State 353:
    (243) bitwise ::= bitwise T_RSHIFT additive *
          additive ::= additive * T_PLUS multiplicative
          additive ::= additive * T_MINUS multiplicative

                       T_MINUS shift  72
                        T_PLUS shift  73
                     {default} reduce 243

State 354:
          mi_columns ::= T_LROUND mi_column_list * T_RROUND
          mi_column_list ::= mi_column_list * T_COMMA column_name

                       T_COMMA shift  245
                      T_RROUND shift  613

State 355:
          mi_given_opt ::= K_GIVEN T_LROUND mi_constraints * T_RROUND
          mi_constraints ::= mi_constraints * T_COMMA mi_constraint

                       T_COMMA shift  132
                      T_RROUND shift  619

State 356:
          infer ::= K_INFER K_EXPLICIT infer_exp_columns * K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt
          infer_exp_columns ::= infer_exp_columns * T_COMMA infer_exp_column

                        K_FROM shift  254
                       T_COMMA shift  7

State 357:
          simulate ::= K_SIMULATE select_columns * K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt
          simulate ::= K_SIMULATE select_columns * K_FROM population_name modeledby_opt usingmodel_opt given_opt
          simulate ::= K_SIMULATE select_columns * K_FROM K_MODELS K_OF population_name modeledby_opt
          select_columns ::= select_columns * T_COMMA select_column

                        K_FROM shift  175
                       T_COMMA shift  13

State 358:
          type ::= typename T_LROUND typearg * T_RROUND
          type ::= typename T_LROUND typearg * T_COMMA typearg T_RROUND

                       T_COMMA shift  155
                      T_RROUND shift  671

State 359:
    (334) type ::= typename *
          type ::= typename * T_LROUND typearg T_RROUND
          type ::= typename * T_LROUND typearg T_COMMA typearg T_RROUND
          typename ::= typename * L_NAME

                      T_LROUND shift  156
                        L_NAME shift  666
                     {default} reduce 334

State 360:
    (178) group_by ::= K_GROUP K_BY expressions *
          group_by ::= K_GROUP K_BY expressions * K_HAVING expression
          expressions ::= expressions * T_COMMA expression

                       T_COMMA shift  33
                      K_HAVING shift  29
                     {default} reduce 178

State 361:
    (244) bitwise ::= additive *
          additive ::= additive * T_PLUS multiplicative
          additive ::= additive * T_MINUS multiplicative

                       T_MINUS shift  72
                        T_PLUS shift  73
                     {default} reduce 244

State 362:
    (242) bitwise ::= bitwise T_LSHIFT additive *
          additive ::= additive * T_PLUS multiplicative
          additive ::= additive * T_MINUS multiplicative

                       T_MINUS shift  72
                        T_PLUS shift  73
                     {default} reduce 242

State 363:
          bqlfn ::= K_PROBABILITY * K_DENSITY K_OF column_name T_EQ unary
          bqlfn ::= K_PROBABILITY * K_DENSITY K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY * K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY * K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY * K_DENSITY K_OF K_VALUE unary
          bqlfn ::= K_PROBABILITY * K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY * K_OF T_LROUND expression T_RROUND

                          K_OF shift  432
                     K_DENSITY shift  491

State 364:
    (241) bitwise ::= bitwise T_BITIOR additive *
          additive ::= additive * T_PLUS multiplicative
          additive ::= additive * T_MINUS multiplicative

                       T_MINUS shift  72
                        T_PLUS shift  73
                     {default} reduce 241

State 365:
          bqlfn ::= K_PREDICTIVE * K_PROBABILITY K_OF column_list
          bqlfn ::= K_PREDICTIVE * K_PROBABILITY K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= K_PREDICTIVE * K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= K_PREDICTIVE * K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= K_PREDICTIVE * K_RELEVANCE predrel_of_opt K_TO existing_rows wrt
          bqlfn ::= K_PREDICTIVE * K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt
          bqlfn ::= K_PREDICTIVE * K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt

                 K_PROBABILITY shift  499
                   K_RELEVANCE shift  237

State 366:
          collating ::= collating K_COLLATE * L_NAME|L_STRING

                      L_STRING shift  709
                        L_NAME shift  709

State 367:
    (240) bitwise ::= bitwise T_BITAND additive *
          additive ::= additive * T_PLUS multiplicative
          additive ::= additive * T_MINUS multiplicative

                       T_MINUS shift  72
                        T_PLUS shift  73
                     {default} reduce 240

State 368:
    (170) column_name ::= L_NAME *
    (174) table_name ::= L_NAME *
          primary ::= L_NAME * T_LROUND expressions_opt T_RROUND
          primary ::= L_NAME * T_LROUND K_DISTINCT expressions_opt T_RROUND
          primary ::= L_NAME * T_LROUND T_STAR T_RROUND

                      T_LROUND shift  5
                         T_DOT reduce 174
                     {default} reduce 170

State 369:
          command ::= K_CREATE temp_opt K_TABLE ifnotexists table_name * K_AS query
          command ::= K_CREATE temp_opt K_TABLE ifnotexists table_name * K_FROM pathname

                          K_AS shift  78
                        K_FROM shift  230

State 370:
          command ::= K_REGRESS column_name K_GIVEN * T_LROUND select_columns T_RROUND nsamples_opt K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt

                      T_LROUND shift  6

State 371:
          command ::= K_REGRESS column_name * K_GIVEN T_LROUND select_columns T_RROUND nsamples_opt K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt

                       K_GIVEN shift  370

State 372:
     (77) anmodelset_opt ::= model_token modelset *
          modelset ::= modelset * T_COMMA modelrange

                       T_COMMA shift  261
                     {default} reduce 77

State 373:
     (86) anlimit ::= K_FOR anduration *
          anlimit ::= K_FOR anduration * K_OR anduration

                          K_OR shift  188
                     {default} reduce 86

State 374:
          command ::= K_INITIALIZE L_INTEGER model_token ifnotexists * K_FOR generator_name

                         K_FOR shift  195

State 375:
          command ::= K_INITIALIZE * L_INTEGER model_token ifnotexists K_FOR generator_name

                     L_INTEGER shift  161

State 376:
          command ::= K_GUESS K_SCHEMA * K_FOR table_name

                         K_FOR shift  197

State 377:
          command ::= K_GUESS * K_SCHEMA K_FOR table_name

                      K_SCHEMA shift  376

State 378:
          anmodelset_matched_opt ::= model_token * T_LROUND modelset T_RROUND

                      T_LROUND shift  124

State 379:
          altergen_cmd ::= K_RENAME * K_TO generator_name

                          K_TO shift  198

State 380:
     (52) command ::= K_ALTER K_GENERATOR generator_name anmodelset_matched_opt altergen_cmds *
          altergen_cmds ::= altergen_cmds * T_COMMA altergen_cmd

                       T_COMMA shift  125
                     {default} reduce 52

State 381:
          alterpop_cmd ::= K_ADD * K_VARIABLE column_name stattype_opt

                    K_VARIABLE shift  200

State 382:
          alterpop_cmd ::= K_SET K_STATTYPES|K_STATTYPE * K_OF pop_columns K_TO stattype

                          K_OF shift  127

State 383:
          alterpop_cmd ::= K_RENAME * K_TO population_name

                          K_TO shift  202

State 384:
     (27) command ::= K_ALTER K_POPULATION population_name alterpop_cmds *
          alterpop_cmds ::= alterpop_cmds * T_COMMA alterpop_cmd

                       T_COMMA shift  151
                     {default} reduce 27

State 385:
          altertab_cmd ::= K_RENAME k_column_opt column_name * K_TO column_name

                          K_TO shift  204

State 386:
     (13) command ::= K_ALTER K_TABLE table_name altertab_cmds *
          altertab_cmds ::= altertab_cmds * T_COMMA altertab_cmd

                       T_COMMA shift  207
                     {default} reduce 13

State 387:
     (81) modelset_opt ::= modelset *
          modelset ::= modelset * T_COMMA modelrange

                       T_COMMA shift  261
                     {default} reduce 81

State 388:
          command ::= K_DROP model_token modelset_opt * K_FROM generator_name

                        K_FROM shift  209

State 389:
          ifexists ::= K_IF * K_EXISTS

                      K_EXISTS shift  538

State 390:
          command ::= K_CREATE K_GENERATOR ifnotexists generator_name * K_FOR population_name backend_name_opt generator_schema_opt

                         K_FOR shift  220

State 391:
          with_schema_opt ::= K_WITH * K_SCHEMA

                      K_SCHEMA shift  550

State 392:
          stattypes_of_opt ::= K_STATTYPE|K_STATTYPES * K_OF

                          K_OF shift  552

State 393:
     (44) pop_columns_guess ::= pop_columns *
          pop_columns ::= pop_columns * T_COMMA column_name

                       T_COMMA shift  224
                     {default} reduce 44

State 394:
          pop_columns_guess ::= T_LROUND T_STAR * T_RROUND

                      T_RROUND shift  553

State 395:
          pop_columns_guess ::= T_LROUND * T_STAR T_RROUND

                        T_STAR shift  394

State 396:
     (38) pop_clause ::= K_IGNORE pop_columns *
          pop_columns ::= pop_columns * T_COMMA column_name

                       T_COMMA shift  224
                     {default} reduce 38

State 397:
          pop_clause ::= K_SET K_STATTYPES|K_STATTYPE * K_OF pop_columns K_TO stattype

                          K_OF shift  130

State 398:
          command ::= K_CREATE K_POPULATION ifnotexists population_name * K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY

                         K_FOR shift  228

State 399:
          ifnotexists ::= K_IF K_NOT * K_EXISTS

                      K_EXISTS shift  562

State 400:
          ifnotexists ::= K_IF * K_NOT K_EXISTS

                         K_NOT shift  399

State 401:
          select_table ::= T_LROUND query * T_RROUND as

                      T_RROUND shift  231

State 402:
    (153) from_sel_opt ::= K_FROM select_tables *
          select_tables ::= select_tables * T_COMMA select_table

                       T_COMMA shift  115
                     {default} reduce 153

State 403:
          primary ::= L_NAME T_LROUND T_STAR * T_RROUND

                      T_RROUND shift  572

State 404:
          primary ::= L_NAME T_LROUND K_DISTINCT expressions_opt * T_RROUND

                      T_RROUND shift  573

State 405:
          primary ::= L_NAME T_LROUND expressions_opt * T_RROUND

                      T_RROUND shift  574

State 406:
          equality ::= equality K_IN T_LROUND expressions_opt * T_RROUND

                      T_RROUND shift  577

State 407:
          equality ::= equality K_IN T_LROUND query * T_RROUND

                      T_RROUND shift  578

State 408:
          equality ::= equality K_IN * T_LROUND query T_RROUND
          equality ::= equality K_IN * T_LROUND expressions_opt T_RROUND

                      T_LROUND shift  1

State 409:
          equality ::= equality K_NOT K_IN T_LROUND expressions_opt * T_RROUND

                      T_RROUND shift  579

State 410:
          equality ::= equality K_NOT K_IN T_LROUND query * T_RROUND

                      T_RROUND shift  580

State 411:
          equality ::= equality K_NOT K_IN * T_LROUND query T_RROUND
          equality ::= equality K_NOT K_IN * T_LROUND expressions_opt T_RROUND

                      T_LROUND shift  2

State 412:
          predrel_of_opt ::= K_OF T_LROUND expression * T_RROUND

                      T_RROUND shift  581

State 413:
          predrel_of_opt ::= K_OF * T_LROUND expression T_RROUND

                      T_LROUND shift  19

State 414:
          existing_rows ::= K_EXISTING K_ROWS T_LROUND expression * T_RROUND

                      T_RROUND shift  582

State 415:
          existing_rows ::= K_EXISTING K_ROWS * T_LROUND expression T_RROUND

                      T_LROUND shift  20

State 416:
          existing_rows ::= K_EXISTING * K_ROWS T_LROUND expression T_RROUND

                        K_ROWS shift  415

State 417:
          constraints_list ::= constraints_list T_COMMA * T_LROUND constraints T_RROUND

                      T_LROUND shift  104

State 418:
          hypothetical_rows ::= K_HYPOTHETICAL K_ROWS K_WITH K_VALUES * T_LROUND constraints_list T_RROUND

                      T_LROUND shift  234

State 419:
          hypothetical_rows ::= K_HYPOTHETICAL K_ROWS K_WITH * K_VALUES T_LROUND constraints_list T_RROUND

                      K_VALUES shift  418

State 420:
          hypothetical_rows ::= K_HYPOTHETICAL K_ROWS * K_WITH K_VALUES T_LROUND constraints_list T_RROUND

                        K_WITH shift  419

State 421:
          hypothetical_rows ::= K_HYPOTHETICAL * K_ROWS K_WITH K_VALUES T_LROUND constraints_list T_RROUND

                        K_ROWS shift  420

State 422:
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt * K_TO existing_rows wrt
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt * K_TO hypothetical_rows wrt
          bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt * K_TO existing_rows K_AND hypothetical_rows wrt

                          K_TO shift  116

State 423:
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN * T_LROUND column_lists T_RROUND

                      T_LROUND shift  96

State 424:
    (261) bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND *
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND * K_GIVEN T_LROUND column_lists T_RROUND

                       K_GIVEN shift  423
                     {default} reduce 261

State 425:
          column_list ::= T_LROUND query * T_RROUND

                      T_RROUND shift  590

State 426:
          estpaircol ::= K_ESTIMATE K_PAIRWISE error * T_SEMI

                        T_SEMI shift  593

State 427:
          estpairrow ::= K_ESTIMATE K_PAIRWISE K_ROW error * T_SEMI

                        T_SEMI shift  594

State 428:
          estcol ::= K_ESTIMATE K_COLUMNS error * T_SEMI

                        T_SEMI shift  595

State 429:
          from_est ::= K_FROM K_COLUMNS|K_VARIABLES * K_OF population_name

                          K_OF shift  239

State 430:
          from_est ::= K_FROM K_PAIRWISE K_COLUMNS|K_VARIABLES * K_OF population_name for

                          K_OF shift  241

State 431:
          bqlfn ::= K_PROBABILITY K_OF T_LROUND expression * T_RROUND

                      T_RROUND shift  603

State 432:
          bqlfn ::= K_PROBABILITY K_OF * T_LROUND expression T_RROUND

                      T_LROUND shift  21

State 433:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt * T_RROUND

                      T_RROUND shift  604

State 434:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN * T_LROUND constraints_opt T_RROUND

                      T_LROUND shift  90

State 435:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF K_VALUE primary * K_GIVEN T_LROUND constraints_opt T_RROUND
    (299) bqlfn ::= primary *

                       K_GIVEN shift  434
                     {default} reduce 299

State 436:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt * T_RROUND

                      T_RROUND shift  606

State 437:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN * T_LROUND constraints_opt T_RROUND

                      T_LROUND shift  91

State 438:
    (265) bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND *
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND * K_GIVEN T_LROUND constraints_opt T_RROUND

                       K_GIVEN shift  437
                     {default} reduce 265

State 439:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt * T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt * T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND

                      T_RROUND shift  438

State 440:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt * T_RROUND

                      T_RROUND shift  607

State 441:
          bqlfn ::= K_SIMILARITY K_TO T_LROUND expression * T_RROUND wrt

                      T_RROUND shift  244

State 442:
          bqlfn ::= K_SIMILARITY K_TO * T_LROUND expression T_RROUND wrt

                      T_LROUND shift  22

State 443:
          ofwithmulti ::= K_OF mi_columns * K_WITH mi_columns

                        K_WITH shift  117

State 444:
          mi_constraint ::= column_name * T_EQ expression
    (295) mi_constraint ::= column_name *

                          T_EQ shift  23
                     {default} reduce 295

State 445:
          mi_given_opt ::= K_GIVEN * T_LROUND mi_constraints T_RROUND

                      T_LROUND shift  106

State 446:
          primary ::= T_LROUND query * T_RROUND

                      T_RROUND shift  620

State 447:
          primary ::= T_LROUND expression * T_RROUND

                      T_RROUND shift  621

State 448:
          primary ::= K_EXISTS T_LROUND query * T_RROUND

                      T_RROUND shift  636

State 449:
          case_whens_opt ::= case_whens_opt K_WHEN expression * K_THEN expression

                        K_THEN shift  26

State 450:
          primary ::= K_CASE case_key_opt case_whens_opt case_else_opt * K_END

                         K_END shift  645

State 451:
          primary ::= table_name * T_DOT column_name

                         T_DOT shift  257

State 452:
          as ::= K_AS * L_NAME

                        L_NAME shift  647

State 453:
          select_column ::= table_name T_DOT T_LROUND query * T_RROUND

                      T_RROUND shift  650

State 454:
          select_column ::= table_name * T_DOT T_STAR
          select_column ::= table_name * T_DOT T_LROUND query T_RROUND
          primary ::= table_name * T_DOT column_name

                         T_DOT shift  154

State 455:
          simulate ::= K_SIMULATE select_columns K_FROM K_MODELS * K_OF population_name modeledby_opt

                          K_OF shift  259

State 456:
          modeledby_opt ::= K_MODELED|K_MODELLED * K_BY generator_name

                          K_BY shift  260

State 457:
          modelrange ::= L_INTEGER T_MINUS * L_INTEGER

                     L_INTEGER shift  660

State 458:
     (84) modelrange ::= L_INTEGER *
          modelrange ::= L_INTEGER * T_MINUS L_INTEGER

                       T_MINUS shift  457
                     {default} reduce 84

State 459:
          modelset ::= modelset * T_COMMA modelrange
    (161) usingmodel_opt ::= K_USING model_token modelset *

                       T_COMMA shift  261
                     {default} reduce 161

State 460:
    (132) given_opt ::= K_GIVEN constraints *
          constraints ::= constraints * T_COMMA constraint

                       T_COMMA shift  137
                     {default} reduce 132

State 461:
          accuracy_opt ::= K_ACCURACY * L_INTEGER

                     L_INTEGER shift  663

State 462:
          primary ::= K_EXISTS * T_LROUND query T_RROUND

                      T_LROUND shift  76

State 463:
          typearg ::= T_MINUS * L_INTEGER

                     L_INTEGER shift  667

State 464:
          typearg ::= T_PLUS * L_INTEGER

                     L_INTEGER shift  668

State 465:
          type ::= typename T_LROUND typearg T_COMMA typearg * T_RROUND

                      T_RROUND shift  670

State 466:
          primary ::= K_CAST T_LROUND expression K_AS type * T_RROUND

                      T_RROUND shift  672

State 467:
          primary ::= K_CAST T_LROUND expression * K_AS type T_RROUND

                          K_AS shift  135

State 468:
          primary ::= K_CAST * T_LROUND expression K_AS type T_RROUND

                      T_LROUND shift  28

State 469:
          withconf ::= K_WITH * K_CONFIDENCE primary

                  K_CONFIDENCE shift  88

State 470:
          group_by ::= K_GROUP * K_BY expressions
          group_by ::= K_GROUP * K_BY expressions K_HAVING expression

                          K_BY shift  15

State 471:
          infer ::= K_INFER infer_auto_columns withconf_opt nsamples_opt * K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt

                        K_FROM shift  272

State 472:
          nsamples_opt ::= K_USING primary * K_SAMPLES

                     K_SAMPLES shift  682

State 473:
          bqlfn ::= K_MUTUAL * K_INFORMATION ofwithmulti mi_given_opt nsamples_opt

                 K_INFORMATION shift  178

State 474:
          ofwith ::= K_OF column_name * K_WITH column_name

                        K_WITH shift  276

State 475:
          bqlfn ::= K_DEPENDENCE * K_PROBABILITY ofwith

                 K_PROBABILITY shift  179

State 476:
          wrt ::= K_IN K_THE K_CONTEXT * K_OF column_list

                          K_OF shift  110

State 477:
          wrt ::= K_IN K_THE * K_CONTEXT K_OF column_list

                     K_CONTEXT shift  476

State 478:
          wrt ::= K_IN * K_THE K_CONTEXT K_OF column_list

                         K_THE shift  477

State 479:
          bqlfn ::= K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression * T_RROUND wrt

                      T_RROUND shift  279

State 480:
          bqlfn ::= K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO * T_LROUND expression T_RROUND wrt

                      T_LROUND shift  30

State 481:
          bqlfn ::= K_SIMILARITY K_OF T_LROUND expression T_RROUND * K_TO T_LROUND expression T_RROUND wrt

                          K_TO shift  480

State 482:
          bqlfn ::= K_SIMILARITY K_OF T_LROUND expression * T_RROUND K_TO T_LROUND expression T_RROUND wrt

                      T_RROUND shift  481

State 483:
    (251) multiplicative ::= concatenative *
          concatenative ::= concatenative * T_CONCAT collating

                      T_CONCAT shift  82
                     {default} reduce 251

State 484:
          bqlfn ::= K_SIMILARITY K_OF * T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt

                      T_LROUND shift  31

State 485:
    (250) multiplicative ::= multiplicative T_PERCENT concatenative *
          concatenative ::= concatenative * T_CONCAT collating

                      T_CONCAT shift  82
                     {default} reduce 250

State 486:
          constraint ::= column_name * T_EQ expression

                          T_EQ shift  32

State 487:
          constraints ::= constraints * T_COMMA constraint
    (137) constraints_opt ::= constraints *

                       T_COMMA shift  137
                     {default} reduce 137

State 488:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN * T_LROUND constraints_opt T_RROUND

                      T_LROUND shift  93

State 489:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary * K_GIVEN T_LROUND constraints_opt T_RROUND
    (299) bqlfn ::= primary *

                       K_GIVEN shift  488
                     {default} reduce 299

State 490:
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name * T_EQ unary
          bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name * T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND

                          T_EQ shift  84

State 491:
          bqlfn ::= K_PROBABILITY K_DENSITY * K_OF column_name T_EQ unary
          bqlfn ::= K_PROBABILITY K_DENSITY * K_OF T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY * K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY * K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND
          bqlfn ::= K_PROBABILITY K_DENSITY * K_OF K_VALUE unary
          bqlfn ::= K_PROBABILITY K_DENSITY * K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND

                          K_OF shift  159

State 492:
    (253) concatenative ::= collating *
          collating ::= collating * K_COLLATE L_NAME|L_STRING

                     K_COLLATE shift  366
                     {default} reduce 253

State 493:
    (249) multiplicative ::= multiplicative T_SLASH concatenative *
          concatenative ::= concatenative * T_CONCAT collating

                      T_CONCAT shift  82
                     {default} reduce 249

State 494:
    (201) boolean_or ::= boolean_and *
          boolean_and ::= boolean_and * K_AND boolean_not

                         K_AND shift  37
                     {default} reduce 201

State 495:
    (181) order_by ::= K_ORDER K_BY order_keys *
          order_keys ::= order_keys * T_COMMA order_key

                       T_COMMA shift  16
                     {default} reduce 181

State 496:
          order_by ::= K_ORDER * K_BY order_keys

                          K_BY shift  12

State 497:
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN * T_LROUND column_lists T_RROUND

                      T_LROUND shift  99

State 498:
    (260) bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF column_list *
          bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF column_list * K_GIVEN T_LROUND column_lists T_RROUND

                       K_GIVEN shift  497
                     {default} reduce 260

State 499:
          bqlfn ::= K_PREDICTIVE K_PROBABILITY * K_OF column_list
          bqlfn ::= K_PREDICTIVE K_PROBABILITY * K_OF T_LROUND column_lists T_RROUND
          bqlfn ::= K_PREDICTIVE K_PROBABILITY * K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND
          bqlfn ::= K_PREDICTIVE K_PROBABILITY * K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND

                          K_OF shift  112

State 500:
    (252) concatenative ::= concatenative T_CONCAT collating *
          collating ::= collating * K_COLLATE L_NAME|L_STRING

                     K_COLLATE shift  366
                     {default} reduce 252

State 501:
    (248) multiplicative ::= multiplicative T_STAR concatenative *
          concatenative ::= concatenative * T_CONCAT collating

                      T_CONCAT shift  82
                     {default} reduce 248

State 502:
    (200) boolean_or ::= boolean_or K_OR boolean_and *
          boolean_and ::= boolean_and * K_AND boolean_not

                         K_AND shift  37
                     {default} reduce 200

State 503:
    (199) expression ::= boolean_or *
          boolean_or ::= boolean_or * K_OR boolean_and

                          K_OR shift  35
                     {default} reduce 199

State 504:
    (196) expressions_opt ::= expressions *
          expressions ::= expressions * T_COMMA expression

                       T_COMMA shift  33
                     {default} reduce 196

State 505:
          command ::= K_CREATE temp_opt * K_TABLE ifnotexists table_name K_AS query
          command ::= K_CREATE temp_opt * K_TABLE ifnotexists table_name K_FROM pathname

                       K_TABLE shift  288

State 506:
          phrases ::= phrases phrase_opt * T_SEMI

                        T_SEMI shift  730

State 507:
     (99) command ::= K_REGRESS column_name K_GIVEN T_LROUND select_columns T_RROUND nsamples_opt K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt *

                     {default} reduce 99

State 508:
     (87) anlimit ::= K_FOR anduration K_OR anduration *

                     {default} reduce 87

State 509:
     (92) anduration ::= L_INTEGER K_SECOND|K_SECONDS *

                     {default} reduce 92

State 510:
     (91) anduration ::= L_INTEGER K_MINUTE|K_MINUTES *

                     {default} reduce 91

State 511:
     (90) anduration ::= L_INTEGER K_ITERATION|K_ITERATIONS *

                     {default} reduce 90

State 512:
     (89) anckpt_opt ::= K_CHECKPOINT anduration *

                     {default} reduce 89

State 513:
     (98) analysis_token ::= ANY *

                     {default} reduce 98

State 514:
     (97) analysis_token ::= T_LROUND analysis_program T_RROUND *

                     {default} reduce 97

State 515:
     (96) analysis_program ::= analysis_program analysis_token *

                     {default} reduce 96

State 516:
     (94) analysis_program_opt ::= T_LROUND analysis_program T_RROUND *

                     {default} reduce 94

State 517:
     (68) command ::= K_ANALYZE generator_name anmodelset_opt anlimit anckpt_opt analysis_program_opt *

                     {default} reduce 68

State 518:
     (67) command ::= K_INITIALIZE L_INTEGER model_token ifnotexists K_FOR generator_name *

                     {default} reduce 67

State 519:
     (21) command ::= K_GUESS K_SCHEMA K_FOR table_name *

                     {default} reduce 21

State 520:
     (79) anmodelset_matched_opt ::= model_token T_LROUND modelset T_RROUND *

                     {default} reduce 79

State 521:
     (53) altergen_cmds ::= altergen_cmd *

                     {default} reduce 53

State 522:
     (55) altergen_cmd ::= K_RENAME K_TO generator_name *

                     {default} reduce 55

State 523:
     (54) altergen_cmds ::= altergen_cmds T_COMMA altergen_cmd *

                     {default} reduce 54

State 524:
     (28) alterpop_cmds ::= alterpop_cmd *

                     {default} reduce 28

State 525:
     (41) stattype_opt ::= stattype *

                     {default} reduce 41

State 526:
     (32) alterpop_cmd ::= K_ADD K_VARIABLE column_name stattype_opt *

                     {default} reduce 32

State 527:
     (31) alterpop_cmd ::= K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO stattype *

                     {default} reduce 31

State 528:
     (30) alterpop_cmd ::= K_RENAME K_TO population_name *

                     {default} reduce 30

State 529:
     (29) alterpop_cmds ::= alterpop_cmds T_COMMA alterpop_cmd *

                     {default} reduce 29

State 530:
     (14) altertab_cmds ::= altertab_cmd *

                     {default} reduce 14

State 531:
     (19) k_column_opt ::= K_COLUMN *

                     {default} reduce 19

State 532:
     (17) altertab_cmd ::= K_RENAME k_column_opt column_name K_TO column_name *

                     {default} reduce 17

State 533:
     (16) altertab_cmd ::= K_RENAME K_TO table_name *

                     {default} reduce 16

State 534:
     (15) altertab_cmds ::= altertab_cmds T_COMMA altertab_cmd *

                     {default} reduce 15

State 535:
     (69) command ::= K_DROP model_token modelset_opt K_FROM generator_name *

                     {default} reduce 69

State 536:
     (51) command ::= K_DROP K_GENERATOR ifexists generator_name *

                     {default} reduce 51

State 537:
     (24) command ::= K_DROP K_POPULATION ifexists population_name *

                     {default} reduce 24

State 538:
     (73) ifexists ::= K_IF K_EXISTS *

                     {default} reduce 73

State 539:
     (12) command ::= K_DROP K_TABLE ifexists table_name *

                     {default} reduce 12

State 540:
     (71) temp_opt ::= K_TEMP|K_TEMPORARY *

                     {default} reduce 71

State 541:
     (50) command ::= K_CREATE K_GENERATOR ifnotexists K_FOR population_name backend_name_opt generator_schema_opt *

                     {default} reduce 50

State 542:
    (172) backend_name ::= L_NAME *

                     {default} reduce 172

State 543:
     (58) backend_name_opt ::= K_USING backend_name *

                     {default} reduce 58

State 544:
     (66) gs_token ::= ANY *

                     {default} reduce 66

State 545:
     (65) gs_token ::= T_LROUND generator_schemum T_RROUND *

                     {default} reduce 65

State 546:
     (64) generator_schemum ::= generator_schemum gs_token *

                     {default} reduce 64

State 547:
     (60) generator_schema_opt ::= T_LROUND|T_LCURLY generator_schema T_RROUND|T_RCURLY *

                     {default} reduce 60

State 548:
     (49) command ::= K_CREATE K_GENERATOR ifnotexists generator_name K_FOR population_name backend_name_opt generator_schema_opt *

                     {default} reduce 49

State 549:
     (23) command ::= K_CREATE K_POPULATION ifnotexists K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY *

                     {default} reduce 23

State 550:
     (26) with_schema_opt ::= K_WITH K_SCHEMA *

                     {default} reduce 26

State 551:
     (33) pop_schema ::= pop_clause *

                     {default} reduce 33

State 552:
     (48) stattypes_of_opt ::= K_STATTYPE|K_STATTYPES K_OF *

                     {default} reduce 48

State 553:
     (43) pop_columns_guess ::= T_LROUND T_STAR T_RROUND *

                     {default} reduce 43

State 554:
     (39) pop_clause ::= K_GUESS stattypes_of_opt pop_columns_guess *

                     {default} reduce 39

State 555:
     (45) pop_columns ::= column_name *

                     {default} reduce 45

State 556:
     (46) pop_columns ::= pop_columns T_COMMA column_name *

                     {default} reduce 46

State 557:
     (37) pop_clause ::= K_SET K_STATTYPES|K_STATTYPE K_OF pop_columns K_TO stattype *

                     {default} reduce 37

State 558:
     (42) stattype ::= L_NAME *

                     {default} reduce 42

State 559:
     (36) pop_clause ::= column_name stattype *

                     {default} reduce 36

State 560:
     (34) pop_schema ::= pop_schema T_SEMI pop_clause *

                     {default} reduce 34

State 561:
     (22) command ::= K_CREATE K_POPULATION ifnotexists population_name K_FOR table_name with_schema_opt T_LROUND|T_LCURLY pop_schema T_RROUND|T_RCURLY *

                     {default} reduce 22

State 562:
     (75) ifnotexists ::= K_IF K_NOT K_EXISTS *

                     {default} reduce 75

State 563:
     (20) pathname ::= L_STRING *

                     {default} reduce 20

State 564:
     (11) command ::= K_CREATE temp_opt K_TABLE ifnotexists table_name K_FROM pathname *

                     {default} reduce 11

State 565:
    (162) select_tables ::= select_table *

                     {default} reduce 162

State 566:
    (174) table_name ::= L_NAME *

                     {default} reduce 174

State 567:
    (165) select_table ::= T_LROUND query T_RROUND as *

                     {default} reduce 165

State 568:
    (164) select_table ::= table_name as *

                     {default} reduce 164

State 569:
    (163) select_tables ::= select_tables T_COMMA select_table *

                     {default} reduce 163

State 570:
    (194) limit ::= K_LIMIT expression T_COMMA expression *

                     {default} reduce 194

State 571:
    (193) limit ::= K_LIMIT expression K_OFFSET expression *

                     {default} reduce 193

State 572:
    (316) primary ::= L_NAME T_LROUND T_STAR T_RROUND *

                     {default} reduce 316

State 573:
    (315) primary ::= L_NAME T_LROUND K_DISTINCT expressions_opt T_RROUND *

                     {default} reduce 315

State 574:
    (314) primary ::= L_NAME T_LROUND expressions_opt T_RROUND *

                     {default} reduce 314

State 575:
    (231) equality ::= equality K_NOTNULL *

                     {default} reduce 231

State 576:
    (230) equality ::= equality K_ISNULL *

                     {default} reduce 230

State 577:
    (228) equality ::= equality K_IN T_LROUND expressions_opt T_RROUND *

                     {default} reduce 228

State 578:
    (226) equality ::= equality K_IN T_LROUND query T_RROUND *

                     {default} reduce 226

State 579:
    (229) equality ::= equality K_NOT K_IN T_LROUND expressions_opt T_RROUND *

                     {default} reduce 229

State 580:
    (227) equality ::= equality K_NOT K_IN T_LROUND query T_RROUND *

                     {default} reduce 227

State 581:
    (280) predrel_of_opt ::= K_OF T_LROUND expression T_RROUND *

                     {default} reduce 280

State 582:
    (281) existing_rows ::= K_EXISTING K_ROWS T_LROUND expression T_RROUND *

                     {default} reduce 281

State 583:
    (274) bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO hypothetical_rows wrt *

                     {default} reduce 274

State 584:
    (282) hypothetical_rows ::= K_HYPOTHETICAL K_ROWS K_WITH K_VALUES T_LROUND constraints_list T_RROUND *

                     {default} reduce 282

State 585:
    (139) constraints_list ::= constraints_list T_COMMA T_LROUND constraints T_RROUND *

                     {default} reduce 139

State 586:
    (138) constraints_list ::= T_LROUND constraints T_RROUND *

                     {default} reduce 138

State 587:
    (275) bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows K_AND hypothetical_rows wrt *

                     {default} reduce 275

State 588:
    (273) bqlfn ::= K_PREDICTIVE K_RELEVANCE predrel_of_opt K_TO existing_rows wrt *

                     {default} reduce 273

State 589:
    (263) bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF T_LROUND column_lists T_RROUND K_GIVEN T_LROUND column_lists T_RROUND *

                     {default} reduce 263

State 590:
    (310) column_list ::= T_LROUND query T_RROUND *

                     {default} reduce 310

State 591:
    (142) select_quant ::= K_ALL *

                     {default} reduce 142

State 592:
    (141) select_quant ::= K_DISTINCT *

                     {default} reduce 141

State 593:
    (112) estpaircol ::= K_ESTIMATE K_PAIRWISE error T_SEMI *

                     {default} reduce 112

State 594:
    (111) estpairrow ::= K_ESTIMATE K_PAIRWISE K_ROW error T_SEMI *

                     {default} reduce 111

State 595:
    (110) estcol ::= K_ESTIMATE K_COLUMNS error T_SEMI *

                     {default} reduce 110

State 596:
    (156) from_est ::= K_FROM K_COLUMNS|K_VARIABLES K_OF population_name *

                     {default} reduce 156

State 597:
    (306) column_lists ::= column_list *

                     {default} reduce 306

State 598:
    (157) from_est ::= K_FROM K_PAIRWISE K_COLUMNS|K_VARIABLES K_OF population_name for *

                     {default} reduce 157

State 599:
    (155) from_est ::= K_FROM K_PAIRWISE population_name *

                     {default} reduce 155

State 600:
    (154) from_est ::= K_FROM population_name *

                     {default} reduce 154

State 601:
    (113) estby ::= K_ESTIMATE select_quant select_columns K_BY|K_WITHIN population_name modeledby_opt usingmodel_opt *

                     {default} reduce 113

State 602:
    (182) order_keys ::= order_key *

                     {default} reduce 182

State 603:
    (278) bqlfn ::= K_PROBABILITY K_OF T_LROUND expression T_RROUND *

                     {default} reduce 278

State 604:
    (269) bqlfn ::= K_PROBABILITY K_DENSITY K_OF K_VALUE primary K_GIVEN T_LROUND constraints_opt T_RROUND *

                     {default} reduce 269

State 605:
    (268) bqlfn ::= K_PROBABILITY K_DENSITY K_OF K_VALUE unary *

                     {default} reduce 268

State 606:
    (267) bqlfn ::= K_PROBABILITY K_DENSITY K_OF T_LROUND constraints_opt T_RROUND K_GIVEN T_LROUND constraints_opt T_RROUND *

                     {default} reduce 267

State 607:
    (266) bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name T_EQ primary K_GIVEN T_LROUND constraints_opt T_RROUND *

                     {default} reduce 266

State 608:
    (272) bqlfn ::= K_SIMILARITY wrt *

                     {default} reduce 272

State 609:
    (271) bqlfn ::= K_SIMILARITY K_TO T_LROUND expression T_RROUND wrt *

                     {default} reduce 271

State 610:
    (285) ofwithmulti ::= K_OF mi_columns K_WITH mi_columns *

                     {default} reduce 285

State 611:
    (288) mi_column_list ::= column_name *

                     {default} reduce 288

State 612:
    (289) mi_column_list ::= mi_column_list T_COMMA column_name *

                     {default} reduce 289

State 613:
    (287) mi_columns ::= T_LROUND mi_column_list T_RROUND *

                     {default} reduce 287

State 614:
    (286) mi_columns ::= column_name *

                     {default} reduce 286

State 615:
    (284) ofwithmulti ::= K_WITH mi_columns *

                     {default} reduce 284

State 616:
    (292) mi_constraints ::= mi_constraint *

                     {default} reduce 292

State 617:
    (294) mi_constraint ::= column_name T_EQ expression *

                     {default} reduce 294

State 618:
    (293) mi_constraints ::= mi_constraints T_COMMA mi_constraint *

                     {default} reduce 293

State 619:
    (291) mi_given_opt ::= K_GIVEN T_LROUND mi_constraints T_RROUND *

                     {default} reduce 291

State 620:
    (318) primary ::= T_LROUND query T_RROUND *

                     {default} reduce 318

State 621:
    (317) primary ::= T_LROUND expression T_RROUND *

                     {default} reduce 317

State 622:
    (116) infer_auto_columns ::= infer_auto_column *

                     {default} reduce 116

State 623:
    (123) infer_exp_columns ::= infer_exp_column *

                     {default} reduce 123

State 624:
    (128) conf_opt ::= K_CONFIDENCE column_name *

                     {default} reduce 128

State 625:
    (126) infer_exp_column ::= K_PREDICT column_name as conf_opt nsamples_opt *

                     {default} reduce 126

State 626:
    (125) infer_exp_column ::= select_column *

                     {default} reduce 125

State 627:
    (124) infer_exp_columns ::= infer_exp_columns T_COMMA infer_exp_column *

                     {default} reduce 124

State 628:
    (115) infer ::= K_INFER K_EXPLICIT infer_exp_columns K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt *

                     {default} reduce 115

State 629:
    (121) withconf_opt ::= withconf *

                     {default} reduce 121

State 630:
    (119) infer_auto_column ::= column_name as *

                     {default} reduce 119

State 631:
    (118) infer_auto_column ::= T_STAR *

                     {default} reduce 118

State 632:
    (117) infer_auto_columns ::= infer_auto_columns T_COMMA infer_auto_column *

                     {default} reduce 117

State 633:
    (169) where ::= K_WHERE expression *

                     {default} reduce 169

State 634:
    (197) expressions ::= expression *

                     {default} reduce 197

State 635:
    (298) bqlfn ::= K_PREDICT column_name withconf nsamples_opt *

                     {default} reduce 298

State 636:
    (320) primary ::= K_EXISTS T_LROUND query T_RROUND *

                     {default} reduce 320

State 637:
    (144) select_columns ::= select_column *

                     {default} reduce 144

State 638:
    (325) case_key_opt ::= expression *

                     {default} reduce 325

State 639:
    (329) case_else_opt ::= K_ELSE expression *

                     {default} reduce 329

State 640:
    (333) literal ::= L_STRING *

                     {default} reduce 333

State 641:
    (332) literal ::= L_FLOAT *

                     {default} reduce 332

State 642:
    (331) literal ::= L_INTEGER *

                     {default} reduce 331

State 643:
    (330) literal ::= K_NULL *

                     {default} reduce 330

State 644:
    (327) case_whens_opt ::= case_whens_opt K_WHEN expression K_THEN expression *

                     {default} reduce 327

State 645:
    (323) primary ::= K_CASE case_key_opt case_whens_opt case_else_opt K_END *

                     {default} reduce 323

State 646:
    (321) primary ::= column_name *

                     {default} reduce 321

State 647:
    (151) as ::= K_AS L_NAME *

                     {default} reduce 151

State 648:
    (149) select_column ::= expression as *

                     {default} reduce 149

State 649:
    (322) primary ::= table_name T_DOT column_name *

                     {default} reduce 322

State 650:
    (148) select_column ::= table_name T_DOT T_LROUND query T_RROUND *

                     {default} reduce 148

State 651:
    (147) select_column ::= table_name T_DOT T_STAR *

                     {default} reduce 147

State 652:
    (146) select_column ::= T_STAR *

                     {default} reduce 146

State 653:
    (145) select_columns ::= select_columns T_COMMA select_column *

                     {default} reduce 145

State 654:
    (173) population_name ::= L_NAME *

                     {default} reduce 173

State 655:
    (140) simulate ::= K_SIMULATE select_columns K_FROM K_MODELS K_OF population_name modeledby_opt *

                     {default} reduce 140

State 656:
    (171) generator_name ::= L_NAME *

                     {default} reduce 171

State 657:
    (159) modeledby_opt ::= K_MODELED|K_MODELLED K_BY generator_name *

                     {default} reduce 159

State 658:
    (176) model_token ::= K_MODELS *

                     {default} reduce 176

State 659:
    (175) model_token ::= K_MODEL *

                     {default} reduce 175

State 660:
     (85) modelrange ::= L_INTEGER T_MINUS L_INTEGER *

                     {default} reduce 85

State 661:
     (83) modelset ::= modelset T_COMMA modelrange *

                     {default} reduce 83

State 662:
     (82) modelset ::= modelrange *

                     {default} reduce 82

State 663:
    (189) accuracy_opt ::= K_ACCURACY L_INTEGER *

                     {default} reduce 189

State 664:
    (129) simulate ::= K_SIMULATE select_columns K_FROM population_name modeledby_opt usingmodel_opt given_opt limit accuracy_opt *

                     {default} reduce 129

State 665:
    (337) typename ::= L_NAME *

                     {default} reduce 337

State 666:
    (338) typename ::= typename L_NAME *

                     {default} reduce 338

State 667:
    (341) typearg ::= T_MINUS L_INTEGER *

                     {default} reduce 341

State 668:
    (340) typearg ::= T_PLUS L_INTEGER *

                     {default} reduce 340

State 669:
    (339) typearg ::= L_INTEGER *

                     {default} reduce 339

State 670:
    (336) type ::= typename T_LROUND typearg T_COMMA typearg T_RROUND *

                     {default} reduce 336

State 671:
    (335) type ::= typename T_LROUND typearg T_RROUND *

                     {default} reduce 335

State 672:
    (319) primary ::= K_CAST T_LROUND expression K_AS type T_RROUND *

                     {default} reduce 319

State 673:
    (299) bqlfn ::= primary *

                     {default} reduce 299

State 674:
    (122) withconf ::= K_WITH K_CONFIDENCE primary *

                     {default} reduce 122

State 675:
    (297) bqlfn ::= K_CORRELATION K_PVALUE ofwith *

                     {default} reduce 297

State 676:
    (296) bqlfn ::= K_CORRELATION ofwith *

                     {default} reduce 296

State 677:
    (179) group_by ::= K_GROUP K_BY expressions K_HAVING expression *

                     {default} reduce 179

State 678:
    (114) infer ::= K_INFER infer_auto_columns withconf_opt nsamples_opt K_FROM population_name modeledby_opt usingmodel_opt where group_by order_by limit_opt *

                     {default} reduce 114

State 679:
    (313) primary ::= L_NAMPAR *

                     {default} reduce 313

State 680:
    (312) primary ::= L_NUMPAR *

                     {default} reduce 312

State 681:
    (311) primary ::= literal *

                     {default} reduce 311

State 682:
    (305) nsamples_opt ::= K_USING primary K_SAMPLES *

                     {default} reduce 305

State 683:
    (277) bqlfn ::= K_MUTUAL K_INFORMATION ofwithmulti mi_given_opt nsamples_opt *

                     {default} reduce 277

State 684:
    (303) ofwith ::= K_OF column_name K_WITH column_name *

                     {default} reduce 303

State 685:
    (302) ofwith ::= K_WITH column_name *

                     {default} reduce 302

State 686:
    (276) bqlfn ::= K_DEPENDENCE K_PROBABILITY ofwith *

                     {default} reduce 276

State 687:
    (300) wrt ::= K_IN K_THE K_CONTEXT K_OF column_list *

                     {default} reduce 300

State 688:
    (270) bqlfn ::= K_SIMILARITY K_OF T_LROUND expression T_RROUND K_TO T_LROUND expression T_RROUND wrt *

                     {default} reduce 270

State 689:
    (135) constraint ::= column_name T_EQ expression *

                     {default} reduce 135

State 690:
    (134) constraints ::= constraints T_COMMA constraint *

                     {default} reduce 134

State 691:
    (133) constraints ::= constraint *

                     {default} reduce 133

State 692:
    (264) bqlfn ::= K_PROBABILITY K_DENSITY K_OF column_name T_EQ unary *

                     {default} reduce 264

State 693:
    (203) boolean_and ::= boolean_not *

                     {default} reduce 203

State 694:
    (187) order_sense ::= K_DESC *

                     {default} reduce 187

State 695:
    (186) order_sense ::= K_ASC *

                     {default} reduce 186

State 696:
    (184) order_key ::= expression order_sense *

                     {default} reduce 184

State 697:
    (183) order_keys ::= order_keys T_COMMA order_key *

                     {default} reduce 183

State 698:
    (109) estimate ::= K_ESTIMATE select_quant select_columns from_est modeledby_opt usingmodel_opt where group_by order_by limit_opt *

                     {default} reduce 109

State 699:
    (309) column_list ::= column_name *

                     {default} reduce 309

State 700:
    (308) column_list ::= T_STAR *

                     {default} reduce 308

State 701:
    (307) column_lists ::= column_lists T_COMMA|K_AND column_list *

                     {default} reduce 307

State 702:
    (262) bqlfn ::= K_PREDICTIVE K_PROBABILITY K_OF column_list K_GIVEN T_LROUND column_lists T_RROUND *

                     {default} reduce 262

State 703:
    (170) column_name ::= L_NAME *

                     {default} reduce 170

State 704:
    (259) unary ::= bqlfn *

                     {default} reduce 259

State 705:
    (258) unary ::= T_PLUS unary *

                     {default} reduce 258

State 706:
    (257) unary ::= T_MINUS unary *

                     {default} reduce 257

State 707:
    (256) unary ::= T_BITNOT unary *

                     {default} reduce 256

State 708:
    (255) collating ::= unary *

                     {default} reduce 255

State 709:
    (254) collating ::= collating K_COLLATE L_NAME|L_STRING *

                     {default} reduce 254

State 710:
    (204) boolean_not ::= K_NOT boolean_not *

                     {default} reduce 204

State 711:
    (202) boolean_and ::= boolean_and K_AND boolean_not *

                     {default} reduce 202

State 712:
    (198) expressions ::= expressions T_COMMA expression *

                     {default} reduce 198

State 713:
    (191) limit_opt ::= limit *

                     {default} reduce 191

State 714:
    (108) select ::= K_SELECT select_quant select_columns from_sel_opt where group_by order_by limit_opt *

                     {default} reduce 108

State 715:
    (107) query ::= simulate *

                     {default} reduce 107

State 716:
    (106) query ::= infer *

                     {default} reduce 106

State 717:
    (105) query ::= estpaircol *

                     {default} reduce 105

State 718:
    (104) query ::= estpairrow *

                     {default} reduce 104

State 719:
    (103) query ::= estcol *

                     {default} reduce 103

State 720:
    (102) query ::= estby *

                     {default} reduce 102

State 721:
    (101) query ::= estimate *

                     {default} reduce 101

State 722:
    (100) query ::= select *

                     {default} reduce 100

State 723:
     (10) command ::= K_CREATE temp_opt K_TABLE ifnotexists table_name K_AS query *

                     {default} reduce 10

State 724:
      (9) command ::= K_COMMIT *

                     {default} reduce 9

State 725:
      (8) command ::= K_ROLLBACK *

                     {default} reduce 8

State 726:
      (7) command ::= K_BEGIN *

                     {default} reduce 7

State 727:
      (6) phrase ::= query *

                     {default} reduce 6

State 728:
      (5) phrase ::= command *

                     {default} reduce 5

State 729:
      (4) phrase_opt ::= phrase *

                     {default} reduce 4

State 730:
      (2) phrases ::= phrases phrase_opt T_SEMI *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: T_SEMI
    2: K_BEGIN
    3: K_ROLLBACK
    4: K_COMMIT
    5: K_CREATE
    6: K_TABLE
    7: K_AS
    8: K_FROM
    9: K_DROP
   10: K_ALTER
   11: T_COMMA
   12: K_RENAME
   13: K_TO
   14: K_COLUMN
   15: L_STRING
   16: K_GUESS
   17: K_SCHEMA
   18: K_FOR
   19: K_POPULATION
   20: T_LROUND
   21: T_LCURLY
   22: T_RROUND
   23: T_RCURLY
   24: K_WITH
   25: K_SET
   26: K_STATTYPES
   27: K_STATTYPE
   28: K_OF
   29: K_ADD
   30: K_VARIABLE
   31: K_IGNORE
   32: L_NAME
   33: T_STAR
   34: K_GENERATOR
   35: K_USING
   36: ANY
   37: K_INITIALIZE
   38: L_INTEGER
   39: K_ANALYZE
   40: K_TEMP
   41: K_TEMPORARY
   42: K_IF
   43: K_EXISTS
   44: K_NOT
   45: T_MINUS
   46: K_OR
   47: K_CHECKPOINT
   48: K_ITERATION
   49: K_ITERATIONS
   50: K_MINUTE
   51: K_MINUTES
   52: K_SECOND
   53: K_SECONDS
   54: K_REGRESS
   55: K_GIVEN
   56: K_BY
   57: K_WITHIN
   58: K_SELECT
   59: K_ESTIMATE
   60: K_COLUMNS
   61: K_PAIRWISE
   62: K_ROW
   63: K_INFER
   64: K_EXPLICIT
   65: K_CONFIDENCE
   66: K_PREDICT
   67: K_SIMULATE
   68: T_EQ
   69: K_MODELS
   70: K_DISTINCT
   71: K_ALL
   72: T_DOT
   73: K_VARIABLES
   74: K_MODELED
   75: K_MODELLED
   76: K_WHERE
   77: K_MODEL
   78: K_GROUP
   79: K_HAVING
   80: K_ORDER
   81: K_ASC
   82: K_DESC
   83: K_ACCURACY
   84: K_LIMIT
   85: K_OFFSET
   86: K_AND
   87: K_IS
   88: K_LIKE
   89: K_ESCAPE
   90: K_GLOB
   91: K_REGEXP
   92: K_MATCH
   93: K_BETWEEN
   94: K_IN
   95: K_ISNULL
   96: K_NOTNULL
   97: T_NEQ
   98: T_LT
   99: T_LEQ
  100: T_GEQ
  101: T_GT
  102: T_BITAND
  103: T_BITIOR
  104: T_LSHIFT
  105: T_RSHIFT
  106: T_PLUS
  107: T_SLASH
  108: T_PERCENT
  109: T_CONCAT
  110: K_COLLATE
  111: T_BITNOT
  112: K_PREDICTIVE
  113: K_PROBABILITY
  114: K_DENSITY
  115: K_VALUE
  116: K_SIMILARITY
  117: K_RELEVANCE
  118: K_DEPENDENCE
  119: K_MUTUAL
  120: K_INFORMATION
  121: K_EXISTING
  122: K_ROWS
  123: K_HYPOTHETICAL
  124: K_VALUES
  125: K_CORRELATION
  126: K_PVALUE
  127: K_THE
  128: K_CONTEXT
  129: K_SAMPLES
  130: L_NUMPAR
  131: L_NAMPAR
  132: K_CAST
  133: K_CASE
  134: K_END
  135: K_WHEN
  136: K_THEN
  137: K_ELSE
  138: K_NULL
  139: L_FLOAT
  140: K_BTABLE
  141: K_CONF
  142: K_DEFAULT
  143: K_LATENT
  144: K_UNSET
  145: error:
  146: bql: <lambda> T_SEMI K_BEGIN K_ROLLBACK K_COMMIT K_CREATE K_DROP K_ALTER K_GUESS K_INITIALIZE K_ANALYZE K_REGRESS K_SELECT K_ESTIMATE K_INFER K_SIMULATE
  147: phrases: <lambda> T_SEMI K_BEGIN K_ROLLBACK K_COMMIT K_CREATE K_DROP K_ALTER K_GUESS K_INITIALIZE K_ANALYZE K_REGRESS K_SELECT K_ESTIMATE K_INFER K_SIMULATE
  148: phrase_opt: <lambda> K_BEGIN K_ROLLBACK K_COMMIT K_CREATE K_DROP K_ALTER K_GUESS K_INITIALIZE K_ANALYZE K_REGRESS K_SELECT K_ESTIMATE K_INFER K_SIMULATE
  149: phrase: K_BEGIN K_ROLLBACK K_COMMIT K_CREATE K_DROP K_ALTER K_GUESS K_INITIALIZE K_ANALYZE K_REGRESS K_SELECT K_ESTIMATE K_INFER K_SIMULATE
  150: command: K_BEGIN K_ROLLBACK K_COMMIT K_CREATE K_DROP K_ALTER K_GUESS K_INITIALIZE K_ANALYZE K_REGRESS
  151: query: K_SELECT K_ESTIMATE K_INFER K_SIMULATE
  152: temp_opt: <lambda> K_TEMP K_TEMPORARY
  153: ifnotexists: <lambda> K_IF
  154: table_name: L_NAME
  155: pathname: L_STRING
  156: ifexists: <lambda> K_IF
  157: altertab_cmds: K_RENAME
  158: altertab_cmd: K_RENAME
  159: k_column_opt: <lambda> K_COLUMN
  160: column_name: L_NAME
  161: population_name: L_NAME
  162: with_schema_opt: <lambda> K_WITH
  163: pop_schema: <lambda> T_SEMI K_GUESS K_SET K_IGNORE L_NAME
  164: alterpop_cmds: K_RENAME K_SET K_ADD
  165: alterpop_cmd: K_RENAME K_SET K_ADD
  166: pop_columns: L_NAME
  167: stattype: L_NAME
  168: stattype_opt: <lambda> L_NAME
  169: pop_clause: <lambda> K_GUESS K_SET K_IGNORE L_NAME
  170: stattypes_of_opt: <lambda> K_STATTYPES K_STATTYPE
  171: pop_columns_guess: T_LROUND L_NAME
  172: generator_name: L_NAME
  173: backend_name_opt: <lambda> K_USING
  174: generator_schema_opt: <lambda> T_LROUND T_LCURLY
  175: anmodelset_matched_opt: <lambda> K_MODELS K_MODEL
  176: altergen_cmds: <lambda> T_COMMA K_RENAME T_LROUND ANY
  177: altergen_cmd: <lambda> K_RENAME T_LROUND ANY
  178: generator_schemum: <lambda> T_LROUND ANY
  179: backend_name: L_NAME
  180: generator_schema: <lambda> T_COMMA T_LROUND ANY
  181: gs_token: T_LROUND ANY
  182: model_token: K_MODELS K_MODEL
  183: anmodelset_opt: <lambda> K_MODELS K_MODEL
  184: anlimit: K_FOR
  185: anckpt_opt: <lambda> K_CHECKPOINT
  186: analysis_program_opt: <lambda> T_LROUND
  187: modelset_opt: <lambda> L_INTEGER
  188: modelset: L_INTEGER
  189: modelrange: L_INTEGER
  190: anduration: L_INTEGER
  191: analysis_program: <lambda> T_LROUND ANY
  192: analysis_token: T_LROUND ANY
  193: select_columns: L_STRING T_LROUND L_NAME T_STAR L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  194: nsamples_opt: <lambda> K_USING
  195: modeledby_opt: <lambda> K_MODELED K_MODELLED
  196: usingmodel_opt: <lambda> K_USING
  197: select: K_SELECT
  198: estimate: K_ESTIMATE
  199: estby: K_ESTIMATE
  200: estcol: K_ESTIMATE
  201: estpairrow: K_ESTIMATE
  202: estpaircol: K_ESTIMATE
  203: infer: K_INFER
  204: simulate: K_SIMULATE
  205: select_quant: <lambda> K_DISTINCT K_ALL
  206: from_sel_opt: <lambda> K_FROM
  207: where: <lambda> K_WHERE
  208: group_by: <lambda> K_GROUP
  209: order_by: <lambda> K_ORDER
  210: limit_opt: <lambda> K_LIMIT
  211: from_est: K_FROM
  212: infer_auto_columns: L_NAME T_STAR
  213: withconf_opt: <lambda> K_WITH
  214: infer_exp_columns: L_STRING T_LROUND L_NAME T_STAR L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  215: infer_auto_column: L_NAME T_STAR
  216: as: <lambda> K_AS
  217: withconf: K_WITH
  218: primary: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  219: infer_exp_column: L_STRING T_LROUND L_NAME T_STAR L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  220: select_column: L_STRING T_LROUND L_NAME T_STAR L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  221: conf_opt: <lambda> K_CONFIDENCE
  222: given_opt: <lambda> K_GIVEN
  223: limit: K_LIMIT
  224: accuracy_opt: <lambda> K_ACCURACY
  225: constraints: L_NAME
  226: constraint: L_NAME
  227: expression: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  228: constraints_opt: <lambda> L_NAME
  229: constraints_list: T_LROUND
  230: select_tables: T_LROUND L_NAME
  231: for: <lambda> K_FOR
  232: select_table: T_LROUND L_NAME
  233: column_lists: T_LROUND L_NAME T_STAR
  234: expressions: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  235: order_keys: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  236: order_key: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  237: order_sense: <lambda> K_ASC K_DESC
  238: expressions_opt: <lambda> L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  239: boolean_or: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  240: boolean_and: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  241: boolean_not: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  242: equality: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  243: ordering: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  244: bitwise: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  245: additive: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  246: multiplicative: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  247: concatenative: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  248: collating: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  249: unary: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  250: bqlfn: L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_PREDICT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  251: column_list: T_LROUND L_NAME T_STAR
  252: wrt: K_IN
  253: predrel_of_opt: <lambda> K_OF
  254: existing_rows: K_EXISTING
  255: hypothetical_rows: K_HYPOTHETICAL
  256: ofwith: <lambda> K_WITH K_OF
  257: ofwithmulti: <lambda> K_WITH K_OF
  258: mi_given_opt: <lambda> K_GIVEN
  259: mi_columns: T_LROUND L_NAME
  260: mi_column_list: L_NAME
  261: mi_constraints: L_NAME
  262: mi_constraint: L_NAME
  263: literal: L_STRING L_INTEGER K_NULL L_FLOAT
  264: type: L_NAME
  265: case_key_opt: <lambda> L_STRING T_LROUND L_NAME L_INTEGER K_EXISTS K_NOT T_MINUS K_PREDICT T_PLUS T_BITNOT K_PREDICTIVE K_PROBABILITY K_SIMILARITY K_DEPENDENCE K_MUTUAL K_CORRELATION L_NUMPAR L_NAMPAR K_CAST K_CASE K_NULL L_FLOAT
  266: case_whens_opt: <lambda> K_WHEN
  267: case_else_opt: <lambda> K_ELSE
  268: typename: L_NAME
  269: typearg: L_INTEGER T_MINUS T_PLUS
